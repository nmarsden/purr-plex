{"version":3,"sources":["components/grid/Grid.module.scss","components/draggablePiece/DraggablePiece.module.scss","components/pointsMessage/PointsMessage.module.scss","components/piece/Piece.module.scss","components/block/Block.module.scss","components/score/Score.module.scss","components/gameDimensionsProvider/GameDimensionsProvider.tsx","components/block/Block.tsx","components/piece/Piece.tsx","components/grid/Grid.tsx","components/draggablePiece/DraggablePiece.tsx","components/score/Score.tsx","components/pointsMessage/PointsMessage.tsx","App.tsx","index.tsx"],"names":["module","exports","GameDimensionsCtx","createContext","getWindowDimensions","window","document","documentElement","width","clientWidth","height","clientHeight","GameDimensionsProvider","children","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","gridWidth","gridHeight","cellWidth","Math","floor","cellHeight","cellSize","min","gridSize","headerHeight","footerHeight","gridTop","gridLeft","gameDimensions","draggableLeft","draggableTop","Provider","value","useGameDimensions","useContext","cx","classNames","bind","styles","Block","x","y","size","blockType","isPreDragging","isDragging","isMuted","isCompletable","inlineStyles","left","top","className","block","style","SHAPES","Map","offset","type","shapeToGridPositions","gridX","gridY","shape","get","map","b","initMultiDim","multiDim","arr","push","calculateOccupied","placedPieces","occupied","forEach","pp","gridPos","Piece","isDraggable","isCompleted","blocks","i","key","shapeToBlocks","shapeDims","shapeDimensions","containerClassName","container","pieceClassName","piece","pickRandomShape","Array","from","keys","random","blockSize","blockOffsets","minX","minY","maxX","maxY","len","length","calculatePlaceable","placeable","isPlaceable","calcCompleted","newPlacedPiece","completedGridPositions","indices","completedColumnIndex","completedRowIndex","completed3x3Index","completedRegionCount","placedPieceGridPositions","includes","every","o","completedColumn","completedRow","gridPositions3x3","gridPositions","leftGridPos3x3","topGridPos3x3","xOffset","yOffset","getGridPositions3x3","index3x3","topLeftGridPos","row3x3","getIndex3x3","placedBlocksKeptCount","filter","some","c","completedRegionCenter","xPositions","p","yPositions","max","calcCompletedRegionCenter","hasNeighbours","index","target","isEqual","blockOffsets1","blockOffsets2","compareXThenY","o1","o2","findShape","sortedBlockOffsets","copyBlockOffsets","sort","sortBlockOffsets","calcSmallerPieces","placedPiece","smallerPieces","result","blockOffsetsWithNeighbours","groupBlockOffsetsByNeighbours","pieceBlockOffsets","completedBlockOffsets","blockOffset","removeCompletedBlockOffsets","pos","newPiece","createPiece","Grid","hoverPiece","completableBlocks","completedBlocks","gridInlineStyles","cellInlineStyles","rows","cellType","rowIndex","cells","split","ch","colIndex","cell","shadedCell","row","grid","DraggablePiece","onDrag","onDragStop","smallShapeDims","initialPosition","setIsPreDragging","setIsDragging","position","setPosition","dragStartYOffset","containerInlineStyles","pieceContainerClassName","toGridDragData","data","pieceRect","node","getBoundingClientRect","halfCellSize","isInsideGrid","onStart","e","onStop","gridDragData","Score","previousScore","currentScore","valueInlineStyles","fontSize","start","end","duration","PointsMessage","pointsMessageData","containerSize","containerTop","containerLeft","pointsHeight","pointsInlineStyles","lineHeight","isShown","points","isCombo","initialShape","initialPlacedPieces","App","setPlacedPieces","setHoverPiece","setCompletedBlocks","setCompletableBlocks","nextShape","setNextShape","setPreviousScore","score","setScore","setPointsMessageData","updatePlacedPieces","newPlacedPieces","completed","removeCompleted","toBlocks","updateScore","calcPoints","setTimeout","showPointsMessage","placeablePiece","completable","updateCompletedBlocks","updateNextShape","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f30a2c21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__3byWf\",\"row\":\"Grid_row__3iB0a\",\"cell\":\"Grid_cell__Gw65o\",\"shadedCell\":\"Grid_shadedCell__2xhfR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DraggablePiece_container__2WQE4\",\"isPreDragging\":\"DraggablePiece_isPreDragging__2WEyo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PointsMessage_container__kfyA8\",\"points\":\"PointsMessage_points__1CcWh\",\"flash\":\"PointsMessage_flash__3RSoB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Piece_container__HKwIh\",\"piece\":\"Piece_piece__21Hob\",\"isCompleted\":\"Piece_isCompleted__29xdv\",\"fade-out\":\"Piece_fade-out__1E-gz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Block_block__3k5af\",\"type1a\":\"Block_type1a__CE7pB\",\"type1b\":\"Block_type1b__1osI_\",\"type1c\":\"Block_type1c__19qYn\",\"type1d\":\"Block_type1d__2h7mH\",\"type2a\":\"Block_type2a__mNICL\",\"type2b\":\"Block_type2b__OWzjg\",\"type2c\":\"Block_type2c__36yJ6\",\"type2d\":\"Block_type2d__229xO\",\"type2e\":\"Block_type2e__2_wbq\",\"type2f\":\"Block_type2f__1h2dF\",\"type3a\":\"Block_type3a__UjqB1\",\"type3b\":\"Block_type3b__X-il1\",\"type3c\":\"Block_type3c__2ONk0\",\"type3d\":\"Block_type3d__3oMRT\",\"type4a\":\"Block_type4a__2ba0F\",\"isPreDragging\":\"Block_isPreDragging__3ZTOG\",\"isDragging\":\"Block_isDragging__3k0tt\",\"isMuted\":\"Block_isMuted__xzwBa\",\"isCompletable\":\"Block_isCompletable__14YK9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Score_container__1Fd1Q\"};","import React, { createContext, FunctionComponent, useContext, useEffect, useState } from 'react'\n\nconst GameDimensionsCtx = createContext<any>(null);\n\nfunction getWindowDimensions() {\n  const { clientWidth: width, clientHeight: height } = window.document.documentElement;\n  return {\n    width,\n    height\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nconst GameDimensionsProvider: FunctionComponent<any> = ({ children }) => {\n  const { width, height } = useWindowDimensions();\n\n  const gridSideMargin = width / 18;\n  const gridTopMargin = height / 18;\n  const gridBottomMargin = height / 3;\n\n  const gridWidth =  width - (gridSideMargin * 2);\n  const gridHeight =  height - (gridTopMargin + gridBottomMargin);\n\n  const cellWidth = Math.floor( gridWidth / 9 );\n  const cellHeight = Math.floor( gridHeight / 9 );\n\n  const cellSize = Math.min( cellWidth, cellHeight );\n  const gridSize = cellSize * 9;\n  const headerHeight = Math.floor( (height - gridSize) * 0.4 );\n  const footerHeight = Math.floor( (height - gridSize) * 0.6 );\n\n  const gridTop = headerHeight;\n  const gridLeft = Math.floor( ( width - gridSize ) / 2 );\n\n  const draggableLeft = Math.floor(gridLeft + (gridSize / 2) );\n  const draggableTop = Math.floor( gridTop + gridSize + (cellSize * 2.2) );\n\n  const gameDimensions = {\n    cellSize,\n    gridSize,\n    gridLeft,\n    gridTop,\n    headerHeight,\n    footerHeight,\n    draggableLeft,\n    draggableTop\n  };\n\n  return (\n    <GameDimensionsCtx.Provider value={gameDimensions}>\n      { children }\n    </GameDimensionsCtx.Provider>\n  )\n};\n\nexport default GameDimensionsProvider;\nexport const useGameDimensions = () => useContext(GameDimensionsCtx);","import React, { FunctionComponent } from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './Block.module.scss';\n\nlet cx = classNames.bind(styles);\n\nconst Block: FunctionComponent<any> = ({ x, y, size, blockType, isPreDragging, isDragging, isMuted, isCompletable }) => {\n  const inlineStyles = {\n    width: `${size + 1}px`,\n    height: `${size + 1}px`,\n    left: `${x - 1}px`,\n    top: `${y - 1}px`,\n  };\n\n  let className = cx({\n    block: true,\n    [`type${blockType}`]: true,\n    isPreDragging: isPreDragging,\n    isDragging: isDragging,\n    isMuted: isMuted,\n    isCompletable: isCompletable\n  });\n\n  return (\n    <div style={inlineStyles}\n         className={className}>\n    </div>\n  );\n};\n\nexport default Block;\n","import React, { FunctionComponent } from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './Piece.module.scss';\nimport { useGameDimensions } from '../gameDimensionsProvider/GameDimensionsProvider';\nimport Block from '../block/Block';\n\ntype BlockType = '1a' | '1b' | '1c'| '1d' | '2a' | '2b' | '2c'| '2d'| '2e' | '2f' | '3a' | '3b' | '3c' | '3d' | '4a';\n\ninterface BlockOffset {\n  x: number,\n  y: number\n}\n\ninterface BlockData {\n  offset:BlockOffset,\n  type:BlockType\n}\n\n// SHAPES: each shape has an associated array of BlockOffset which is ordered by x ascending and then y ascending\nconst SHAPES:Map<string, Array<BlockData>> = new Map([\n  ['1B',      [{offset:{x:0,y:0},type:'4a'}]],\n  ['2B_I_1',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'3a'}]],\n  ['2B_I_2',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'3b'}]],\n  ['3B_I_1',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'2e'}, {offset:{x:2,y:0},type:'3a'}]],\n  ['3B_I_2',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'2f'}, {offset:{x:0,y:2},type:'3b'}]],\n  ['3B_L_1',  [{offset:{x:0,y:1},type:'3c'}, {offset:{x:1,y:0},type:'3d'}, {offset:{x:1,y:1},type:'2b'}]],\n  ['3B_L_2',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'2a'}, {offset:{x:1,y:1},type:'3b'}]],\n  ['3B_L_3',  [{offset:{x:0,y:0},type:'2d'}, {offset:{x:0,y:1},type:'3b'}, {offset:{x:1,y:0},type:'3a'}]],\n  ['3B_L_4',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'2c'}, {offset:{x:1,y:1},type:'3a'}]],\n  ['4B_O',    [{offset:{x:0,y:0},type:'2d'}, {offset:{x:0,y:1},type:'2c'}, {offset:{x:1,y:0},type:'2a'}, {offset:{x:1,y:1},type:'2b'}]],\n  ['4B_L_1',  [{offset:{x:0,y:1},type:'3c'}, {offset:{x:1,y:1},type:'2e'}, {offset:{x:2,y:0},type:'3d'}, {offset:{x:2,y:1},type:'2b'}]],\n  ['4B_L_2',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'2a'}, {offset:{x:1,y:1},type:'2f'}, {offset:{x:1,y:2},type:'3b'}]],\n  ['4B_L_3',  [{offset:{x:0,y:0},type:'2d'}, {offset:{x:0,y:1},type:'3b'}, {offset:{x:1,y:0},type:'2e'}, {offset:{x:2,y:0},type:'3a'}]],\n  ['4B_L_4',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'2f'}, {offset:{x:0,y:2},type:'2c'}, {offset:{x:1,y:2},type:'3a'}]],\n  ['4B_J_1',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'2e'}, {offset:{x:2,y:0},type:'2a'}, {offset:{x:2,y:1},type:'3b'}]],\n  ['4B_J_2',  [{offset:{x:0,y:2},type:'3c'}, {offset:{x:1,y:0},type:'3d'}, {offset:{x:1,y:1},type:'2f'}, {offset:{x:1,y:2},type:'2b'}]],\n  ['4B_J_3',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'2c'}, {offset:{x:1,y:1},type:'2e'}, {offset:{x:2,y:1},type:'3a'}]],\n  ['4B_J_4',  [{offset:{x:0,y:0},type:'2d'}, {offset:{x:0,y:1},type:'2f'}, {offset:{x:0,y:2},type:'3b'}, {offset:{x:1,y:0},type:'3a'}]],\n  ['4B_Z_1',  [{offset:{x:0,y:1},type:'2d'}, {offset:{x:0,y:2},type:'3b'}, {offset:{x:1,y:0},type:'3d'}, {offset:{x:1,y:1},type:'2b'}]],\n  ['4B_Z_2',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'2a'}, {offset:{x:1,y:1},type:'2c'}, {offset:{x:2,y:1},type:'3a'}]],\n  ['4B_S_1',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'2c'}, {offset:{x:1,y:1},type:'2a'}, {offset:{x:1,y:2},type:'3b'}]],\n  ['4B_S_2',  [{offset:{x:0,y:1},type:'3c'}, {offset:{x:1,y:0},type:'2d'}, {offset:{x:1,y:1},type:'2b'}, {offset:{x:2,y:0},type:'3a'}]],\n  ['4B_T_1',  [{offset:{x:0,y:1},type:'3c'}, {offset:{x:1,y:0},type:'3d'}, {offset:{x:1,y:1},type:'1c'}, {offset:{x:2,y:1},type:'3a'}]],\n  ['4B_T_2',  [{offset:{x:0,y:1},type:'3c'}, {offset:{x:1,y:0},type:'3d'}, {offset:{x:1,y:1},type:'1b'}, {offset:{x:1,y:2},type:'3b'}]],\n  ['4B_T_3',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'1a'}, {offset:{x:1,y:1},type:'3b'}, {offset:{x:2,y:0},type:'3a'}]],\n  ['4B_T_4',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'1d'}, {offset:{x:0,y:2},type:'3b'}, {offset:{x:1,y:1},type:'3a'}]],\n  ['4B_I_1',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'2e'}, {offset:{x:2,y:0},type:'2e'}, {offset:{x:3,y:0},type:'3a'}]],\n  ['4B_I_2',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'2f'}, {offset:{x:0,y:2},type:'2f'}, {offset:{x:0,y:3},type:'3b'}]],\n]);\n\nconst shapeToBlocks = (x:number, y:number, size:number, shape:string, isPreDragging:boolean, isDragging:boolean, isMuted:boolean, isCompletable:boolean) => {\n  const blockData:BlockData[] = SHAPES.get(shape) || [];\n  return blockData.map( (b, i) =>\n    <Block key={i}\n           x={x+(b.offset.x * size)}\n           y={y+(b.offset.y * size)}\n           size={size}\n           blockType={isDragging ? '4a' : b.type}\n           isPreDragging={isPreDragging}\n           isDragging={isDragging}\n           isMuted={isMuted}\n           isCompletable={isCompletable}\n    />);\n};\n\nexport const shapeToGridPositions = (gridX:number, gridY:number, shape:string):Array<GridPos> => {\n  const blockData:BlockData[] = SHAPES.get(shape) || [];\n  return blockData.map(b => { return { x: gridX + b.offset.x, y: gridY + b.offset.y } });\n};\n\nconst getGridPositions3x3 = (gridPos:GridPos):GridPos[] => {\n  const gridPositions:GridPos[] = [];\n  const leftGridPos3x3 = Math.floor(gridPos.x / 3) * 3;\n  const topGridPos3x3 = Math.floor(gridPos.y / 3) * 3;\n  for (let xOffset=0; xOffset<3; xOffset++) {\n    for (let yOffset=0; yOffset<3; yOffset++) {\n      gridPositions.push({ x:leftGridPos3x3 + xOffset, y: topGridPos3x3 + yOffset });\n    }\n  }\n  return gridPositions;\n};\n\nconst initMultiDim = (value:boolean):boolean[][] => {\n  let multiDim = [];\n  for (let gridX=0; gridX<9; gridX++) {\n    let arr:boolean[] = [];\n    multiDim.push(arr);\n    for (let gridY=0; gridY<9; gridY++) {\n      arr.push(value);\n    }\n  }\n  return multiDim;\n};\n\nconst calculateOccupied = (placedPieces:PieceData[]):boolean[][] => {\n  let occupied = initMultiDim(false);\n  placedPieces.forEach(pp => {\n    shapeToGridPositions(pp.gridX, pp.gridY, pp.shape).forEach(gridPos => {\n      occupied[gridPos.x][gridPos.y] = true;\n    })\n  });\n  return occupied;\n};\n\nlet cx = classNames.bind(styles);\n\nconst Piece: FunctionComponent<any> = ({ x, y, shape, isDraggable, isPreDragging, isDragging, isMuted, isCompletable, isCompleted }) => {\n  const gameDimensions = useGameDimensions();\n  const cellSize = gameDimensions.cellSize;\n  const blockSize = (isDraggable && !isDragging) ? Math.floor(cellSize/2) : cellSize;\n  const blocks = shapeToBlocks(cellSize * x, cellSize * y, blockSize, shape, isPreDragging, isDragging, isMuted, isCompletable);\n\n  const shapeDims = shapeDimensions(shape, cellSize);\n  let inlineStyles = {\n    width: `${shapeDims.width}px`,\n    height: `${shapeDims.height}px`\n  };\n  let containerClassName = cx({\n    container: true,\n    isCompleted: isCompleted\n  });\n  let pieceClassName = cx({\n    piece: true,\n  });\n\n  return (\n    <div style={inlineStyles} className={containerClassName}>\n      <div style={inlineStyles} className={pieceClassName}>\n        {blocks}\n      </div>\n    </div>\n);\n};\n\nexport default Piece;\n\nexport interface GridPos {\n  x: number,\n  y: number\n}\n\nexport interface PieceData {\n  gridX: number,\n  gridY: number,\n  shape: string\n}\n\nexport const pickRandomShape = ():string => { return Array.from(SHAPES.keys())[Math.floor(Math.random() * SHAPES.size)] };\n\n// FOR TESTING (replace above code with this)\n// export const pickRandomShape = ():string => { return '3B_I_1' };\n\nexport const shapeDimensions = (shape:string, blockSize:number) => {\n  const blockData:BlockData[] = SHAPES.get(shape) || [];\n  const blockOffsets:BlockOffset[] = blockData.map(b => b.offset);\n\n  let minX = blockOffsets[0].x;\n  let minY = blockOffsets[0].y;\n  let maxX = blockOffsets[0].x;\n  let maxY = blockOffsets[0].y;\n\n  for (let i = 1, len=blockOffsets.length; i < len; i++) {\n    let x = blockOffsets[i].x;\n    let y = blockOffsets[i].y;\n    minX = (x < minX) ? x : minX;\n    minY = (y < minY) ? y : minY;\n    maxX = (x > maxX) ? x : maxX;\n    maxY = (y > maxY) ? y : maxY;\n  }\n  const width = (maxX - minX + 1) * blockSize;\n  const height = (maxY - minY + 1) * blockSize;\n  return { width, height };\n};\n\nexport const calculatePlaceable = (shape:string, placedPieces:PieceData[]):boolean[][] => {\n  const occupied:boolean[][] = calculateOccupied(placedPieces);\n  let placeable:boolean[][] = initMultiDim(false);\n\n  for (let gridX=0; gridX<9; gridX++) {\n    for (let gridY=0; gridY<9; gridY++) {\n\n      let isPlaceable = true;\n      shapeToGridPositions(gridX, gridY, shape).forEach(gridPos => {\n        isPlaceable = isPlaceable && gridPos.x < 9 && gridPos.y < 9 && !occupied[gridPos.x][gridPos.y];\n      });\n      placeable[gridX][gridY] = isPlaceable;\n    }\n  }\n  return placeable;\n};\n\nexport interface CalcCompletedResult {\n  completedGridPositions:GridPos[],\n  completedRegionCount:number,\n  completedRegionCenter:GridPos,\n  placedBlocksKeptCount:number\n}\n\nexport const calcCompleted = (newPlacedPiece:PieceData, placedPieces: PieceData[]): CalcCompletedResult => {\n\n  const completedGridPositions:GridPos[] = [];\n  const indices:number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n  const occupied:boolean[][] = calculateOccupied([...placedPieces, newPlacedPiece]);\n  const completedColumnIndex:number[] = [];\n  const completedRowIndex:number[] = [];\n  const completed3x3Index:number[] = [];\n  let completedRegionCount = 0;\n  const placedPieceGridPositions:GridPos[] = shapeToGridPositions(newPlacedPiece.gridX, newPlacedPiece.gridY, newPlacedPiece.shape);\n\n  const calcCompletedRegionCenter = (completedGridPositions:GridPos[]):GridPos => {\n    const xPositions = completedGridPositions.map(p => p.x);\n    const yPositions = completedGridPositions.map(p => p.y);\n    const minX = Math.min(...xPositions);\n    const maxX = Math.max(...xPositions);\n    const minY = Math.min(...yPositions);\n    const maxY = Math.max(...yPositions);\n\n    return { x: Math.floor(minX + (maxX - minX)/2), y: Math.floor(minY + (maxY - minY)/2) };\n  };\n\n  const getIndex3x3 = (topLeftGridPos:GridPos):number => {\n    const row3x3 = Math.floor((topLeftGridPos.y + 1) / 3);\n    const col3x3 = Math.floor((topLeftGridPos.x + 1) / 3);\n    return (3 * col3x3) + row3x3;\n  };\n\n  placedPieceGridPositions.forEach(gridPos => {\n    // Check for completed column\n    if (!completedColumnIndex.includes(gridPos.x) && occupied[gridPos.x].every(o => o)) {\n      const completedColumn:GridPos[] = indices.map(i => { return { x:gridPos.x, y:i }; });\n      completedGridPositions.push(...completedColumn);\n      completedRegionCount++;\n      completedColumnIndex.push(gridPos.x);\n    }\n    // Check for completed row\n    if (!completedRowIndex.includes(gridPos.y) && indices.every(i => occupied[i][gridPos.y])) {\n      const completedRow:GridPos[] = indices.map(i => { return { x:i, y:gridPos.y }; });\n      completedGridPositions.push(...completedRow);\n      completedRegionCount++;\n      completedRowIndex.push(gridPos.y);\n    }\n    // Check for completed 3x3\n    const gridPositions3x3 = getGridPositions3x3(gridPos);\n    const index3x3 = getIndex3x3(gridPositions3x3[0]);\n    if (!completed3x3Index.includes(index3x3) && gridPositions3x3.every(({x, y}) => occupied[x][y])) {\n      completedGridPositions.push(...gridPositions3x3);\n      completedRegionCount++;\n      completed3x3Index.push(index3x3);\n    }\n  });\n\n  // Calc placedBlocksKeptCount\n  const placedBlocksKept:GridPos[] = placedPieceGridPositions.filter(gridPos => !completedGridPositions.some(c => c.x === gridPos.x && c.y === gridPos.y));\n  const placedBlocksKeptCount = placedBlocksKept.length;\n\n  // Calc completedRegionCenter\n  const completedRegionCenter = calcCompletedRegionCenter(completedGridPositions);\n\n  return {\n    completedGridPositions,\n    completedRegionCount,\n    completedRegionCenter,\n    placedBlocksKeptCount\n  };\n};\n\nconst toBlockOffsets = (gridX: number, gridY: number, gridPositions: BlockOffset[]) => {\n  return gridPositions.map(pos => { return { x: (pos.x - gridX), y: (pos.y - gridY) } });\n};\n\nconst hasNeighbours = (blockOffsets:BlockOffset[], index:number):boolean => {\n  const target = blockOffsets[index];\n  return blockOffsets.some((offset) => (offset.x === target.x && offset.y === target.y+1) ||\n                                       (offset.x === target.x && offset.y === target.y-1) ||\n                                       (offset.y === target.y && offset.x === target.x+1) ||\n                                       (offset.y === target.y && offset.x === target.x-1));\n};\n\nconst removeCompletedBlockOffsets = (pieceBlockOffsets: BlockOffset[], completedBlockOffsets:BlockOffset[]):BlockOffset[] => {\n  return pieceBlockOffsets.filter(blockOffset => !completedBlockOffsets.some(c => c.x === blockOffset.x && c.y === blockOffset.y));\n};\n\nconst groupBlockOffsetsByNeighbours = (blockOffsets:BlockOffset[]):BlockOffset[][] => {\n  const result:BlockOffset[][] = [];\n  // Any blockOffset without neighbours is its own group\n  // Note: This strategy takes advantage of knowing that we are dealing with at most 3 block offsets, so there will be\n  // at most only be one group of blocks with neighbours, and any other groups will be single blocks without neighbours.\n  const blockOffsetsWithNeighbours:BlockOffset[] = [];\n  for (let i=0; i<blockOffsets.length; i++) {\n    if (hasNeighbours(blockOffsets, i)) {\n      blockOffsetsWithNeighbours.push(blockOffsets[i]);\n    } else {\n      result.push([blockOffsets[i]])\n    }\n  }\n  if (blockOffsetsWithNeighbours.length > 0) {\n    result.push(blockOffsetsWithNeighbours);\n  }\n  return result;\n};\n\nconst isEqual = (blockOffsets1: BlockOffset[], blockOffsets2: BlockOffset[]): boolean => {\n  return (blockOffsets1.length === blockOffsets2.length) &&\n         blockOffsets1.every((o, i) => (o.x === blockOffsets2[i].x) && (o.y === blockOffsets2[i].y));\n};\n\nconst copyBlockOffsets = (blockOffsets:BlockOffset[]):BlockOffset[] => {\n  return blockOffsets.map(o => { return { x:o.x, y:o.y } });\n};\n\nconst compareXThenY = (o1:BlockOffset, o2:BlockOffset):number => {\n  if (o1.x < o2.x) {\n    return -1;\n  }\n  if (o1.x > o2.x) {\n    return 1;\n  }\n  // o1.x equals o2.x\n  if (o1.y < o2.y) {\n    return -1;\n  }\n  return 0;\n};\n\nconst sortBlockOffsets = (blockOffsets:BlockOffset[]):BlockOffset[] => {\n  return copyBlockOffsets(blockOffsets).sort(compareXThenY);\n};\n\nconst findShape = (blockOffsets: BlockOffset[]):string => {\n  const sortedBlockOffsets:BlockOffset[] = sortBlockOffsets(blockOffsets);\n\n  for(let shape of Array.from( SHAPES.keys()) ) {\n    const blockData:BlockData[] = SHAPES.get(shape) || [];\n    const blockOffsets:BlockOffset[] = blockData.map(b => b.offset);\n\n    if (isEqual(sortedBlockOffsets, blockOffsets)) {\n      return shape;\n    }\n  }\n  return 'UNKNOWN';\n};\n\nconst createPiece = (gridX:number, gridY:number, blockOffsets:BlockOffset[]):PieceData => {\n  const minX = Math.min(...blockOffsets.map(o => o.x));\n  const minY = Math.min(...blockOffsets.map(o => o.y));\n  const newPiece:PieceData = {\n    gridX: gridX + minX,\n    gridY: gridY + minY,\n    shape: findShape(blockOffsets.map(o => { return { x: o.x - minX, y: o.y - minY } }))\n  };\n  return newPiece;\n};\n\nconst calcSmallerPieces = (placedPiece: PieceData, completedGridPositions: GridPos[]):PieceData[] => {\n  const smallerPieces:PieceData[] = [];\n  const blockData:BlockData[] = SHAPES.get(placedPiece.shape) || [];\n  const pieceBlockOffsets:BlockOffset[] = blockData.map(b => b.offset);\n\n  const completedBlockOffsets:BlockOffset[] = toBlockOffsets(placedPiece.gridX, placedPiece.gridY, completedGridPositions);\n  const remainingBlockOffsets:BlockOffset[] = removeCompletedBlockOffsets(pieceBlockOffsets, completedBlockOffsets);\n  const groupedBlockOffsets:BlockOffset[][] = groupBlockOffsetsByNeighbours(remainingBlockOffsets);\n  groupedBlockOffsets.forEach(blockOffsets => {\n    const newPiece:PieceData = createPiece(placedPiece.gridX, placedPiece.gridY, blockOffsets);\n    smallerPieces.push(newPiece);\n  });\n\n  return smallerPieces;\n};\n\nexport const removeCompleted = (newPlacedPiece: PieceData, placedPieces: PieceData[], completed:GridPos[]):PieceData[] => {\n  const newPlacedPieces:PieceData[] = [];\n\n  [...placedPieces, newPlacedPiece].forEach(placedPiece => {\n    const gridPositions:GridPos[] = shapeToGridPositions(placedPiece.gridX, placedPiece.gridY, placedPiece.shape);\n    const completedGridPositions = gridPositions.filter(gridPos => completed.some(c => c.x === gridPos.x && c.y === gridPos.y));\n\n    if (completedGridPositions.length === 0) {\n      // keep piece as is\n      newPlacedPieces.push(placedPiece);\n    } else if (completedGridPositions.length !== gridPositions.length) {\n      // keep piece as one or more smaller pieces\n      const smallerPieces:PieceData[] = calcSmallerPieces(placedPiece, completedGridPositions);\n      newPlacedPieces.push(...smallerPieces);\n    }\n  });\n  return newPlacedPieces;\n};\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport styles from './Grid.module.scss';\nimport { useGameDimensions } from '../gameDimensionsProvider/GameDimensionsProvider';\nimport Piece, { PieceData } from '../piece/Piece';\n\nconst Grid: FunctionComponent<any> = ({ placedPieces, hoverPiece, completableBlocks, completedBlocks }) => {\n  const cellTypes = [\n    'OOOXXXOOO',\n    'OOOXXXOOO',\n    'OOOXXXOOO',\n    'XXXOOOXXX',\n    'XXXOOOXXX',\n    'XXXOOOXXX',\n    'OOOXXXOOO',\n    'OOOXXXOOO',\n    'OOOXXXOOO'\n  ];\n  const gameDimensions = useGameDimensions();\n  const cellSize = gameDimensions.cellSize;\n  const gridInlineStyles = {\n    left: `${gameDimensions.gridLeft}px`,\n    top: `${gameDimensions.gridTop}px`\n  };\n  const cellInlineStyles = {\n    width: `${cellSize}px`,\n    height: `${cellSize}px`\n  };\n\n  const rows = cellTypes.map( (cellType, rowIndex) => {\n    const cells: Array<ReactNode> = [];\n    cellType.split('').forEach( (ch, colIndex) =>  {\n      cells.push(<div key={colIndex}\n                      style={cellInlineStyles}\n                      className={ch === 'O' ? styles.cell : styles.shadedCell}>\n                 </div>)\n    });\n    return <div key={rowIndex} className={styles.row}>{cells}</div>;\n  } );\n\n  return (\n    <div style={gridInlineStyles}\n         className={styles.grid}>\n      {rows}\n      {placedPieces.map( (p:PieceData, i:number) => <Piece key={i} x={p.gridX} y={p.gridY} shape={p.shape}/>)}\n      {hoverPiece && <Piece key={999} x={hoverPiece.gridX} y={hoverPiece.gridY} shape={hoverPiece.shape} isMuted={true}/>}\n      {completableBlocks.map( (p:PieceData, i:number) => <Piece key={100+i} x={p.gridX} y={p.gridY} shape={p.shape} isCompletable={true}/>)}\n      {completedBlocks.map( (p:PieceData, i:number) => <Piece key={200+i} x={p.gridX} y={p.gridY} shape={p.shape} isCompleted={true}/>)}\n    </div>\n  );\n};\n\nexport default Grid;\n","import React, { FunctionComponent, useState } from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './DraggablePiece.module.scss';\nimport { useGameDimensions } from '../gameDimensionsProvider/GameDimensionsProvider';\nimport Draggable, { DraggableData, DraggableEvent, DraggableEventHandler } from \"react-draggable\";\nimport Piece, { shapeDimensions } from '../piece/Piece';\n\nlet cx = classNames.bind(styles);\n\nconst DraggablePiece: FunctionComponent<any> = ({ shape, onDrag, onDragStop }) => {\n  const gameDimensions = useGameDimensions();\n  const shapeDims = shapeDimensions(shape, gameDimensions.cellSize);\n  const smallShapeDims = shapeDimensions(shape, gameDimensions.cellSize / 2);\n  const initialPosition = {\n    x: (shapeDims.width - smallShapeDims.width) / 2,\n    y: (shapeDims.height - smallShapeDims.height) / 2\n  };\n  const [isPreDragging, setIsPreDragging] = useState(true);\n  const [isDragging, setIsDragging] = useState(false);\n  const [position, setPosition] = useState(initialPosition);\n  const dragStartYOffset = -(gameDimensions.cellSize * 2);\n\n  let containerInlineStyles = {\n    left: `${gameDimensions.draggableLeft - (shapeDims.width / 2)}px`,\n    top: `${gameDimensions.draggableTop - (shapeDims.height / 2)}px`\n  };\n\n  let pieceContainerClassName = cx({\n    isPreDragging: isPreDragging,\n  });\n\n  const toGridDragData = (data: DraggableData) => {\n    const pieceRect = data.node.getBoundingClientRect();\n\n    const halfCellSize = gameDimensions.cellSize / 2;\n    const gridX = Math.floor( (pieceRect.left + halfCellSize - gameDimensions.gridLeft) / gameDimensions.cellSize );\n    const gridY = Math.floor( (pieceRect.top + halfCellSize - gameDimensions.gridTop) / gameDimensions.cellSize );\n    const isInsideGrid = gridX >= 0 && gridX <=8 && gridY >=0 && gridY <= 8;\n\n    return { isInsideGrid, gridX, gridY, shape };\n  };\n\n  const handleStart = () => {\n    setIsPreDragging(true);\n    setPosition({x:0,y:dragStartYOffset});\n    setIsDragging(true);\n  };\n  const handleDrag: DraggableEventHandler = (e: DraggableEvent, data: DraggableData) => {\n    setIsPreDragging(false);\n    onDrag(toGridDragData(data));\n  };\n  const handleStop: DraggableEventHandler = (e: DraggableEvent, data: DraggableData) => {\n    const gridDragData = toGridDragData(data);\n\n    setPosition(initialPosition);\n    setIsDragging(false);\n\n    onDragStop(gridDragData);\n  };\n\n  return (\n    <div style={containerInlineStyles} className={styles.container}>\n      <Draggable position={position}\n                 onStart={handleStart}\n                 onDrag={handleDrag}\n                 onStop={handleStop}>\n        <div className={pieceContainerClassName}>\n          <Piece x={0} y={0} shape={shape} isDraggable={true} isPreDragging={isPreDragging} isDragging={isDragging}/>\n        </div>\n      </Draggable>\n    </div>\n  );\n};\n\nexport default DraggablePiece;\n","import React, { FunctionComponent } from 'react';\nimport styles from './Score.module.scss';\nimport { useGameDimensions } from '../gameDimensionsProvider/GameDimensionsProvider';\nimport CountUp from 'react-countup';\n\nconst Score: FunctionComponent<any> = ({ previousScore, currentScore }) => {\n  const gameDimensions = useGameDimensions();\n  const headerHeight = gameDimensions.headerHeight;\n  const cellSize = gameDimensions.cellSize;\n  const containerInlineStyles = {\n    height: `${headerHeight}px`,\n  };\n  const valueInlineStyles = {\n    height: `${cellSize*2}px`,\n    fontSize: `${cellSize}px`\n  };\n\n  return (\n    <div className={styles.container} style={containerInlineStyles}>\n      <div style={valueInlineStyles}>\n        <CountUp start={previousScore} end={currentScore} duration={1}/>\n      </div>\n    </div>\n  );\n};\n\nexport default Score;\n","import React, { FunctionComponent } from 'react';\nimport styles from './PointsMessage.module.scss';\nimport { useGameDimensions } from '../gameDimensionsProvider/GameDimensionsProvider';\n\nexport interface PointsMessageData {\n  gridX?: number,\n  gridY?: number,\n  points?: number,\n  isCombo?: boolean,\n  isShown: boolean\n}\n\nconst PointsMessage: FunctionComponent<any> = ({ pointsMessageData }) => {\n  const gameDimensions = useGameDimensions();\n  const cellSize = gameDimensions.cellSize;\n  const halfCellSize = gameDimensions.cellSize / 2;\n  const containerSize = cellSize * 3;\n  const containerTop = Math.floor(gameDimensions.gridTop + (pointsMessageData.gridY * cellSize) + halfCellSize - (containerSize/2));\n  const containerLeft = Math.floor(gameDimensions.gridLeft + (pointsMessageData.gridX * cellSize) + halfCellSize - (containerSize/2));\n  const containerInlineStyles = {\n    top: `${containerTop}px`,\n    left: `${containerLeft}px`,\n    width: `${containerSize}px`,\n    height: `${containerSize}px`,\n  };\n  const pointsHeight = Math.floor(0.75 * cellSize);\n  const pointsInlineStyles = {\n    height: `${pointsHeight}px`,\n    fontSize: `${pointsHeight}px`,\n    lineHeight: `${pointsHeight}px`\n  };\n\n  return (\n    <div className={styles.container} style={containerInlineStyles}>\n      {pointsMessageData.isShown ?\n        <div className={styles.points}\n             style={pointsInlineStyles}>\n          {pointsMessageData.isCombo ? <div>COMBO</div> : <></>}\n          <div>+{pointsMessageData.points}</div>\n        </div>\n        :\n        <></>\n      }\n    </div>\n  );\n};\n\nexport default PointsMessage;\n","import React, { useState } from 'react';\nimport GameDimensionsProvider from './components/gameDimensionsProvider/GameDimensionsProvider';\nimport Grid from './components/grid/Grid';\nimport DraggablePiece from './components/draggablePiece/DraggablePiece';\nimport {\n  calcCompleted,\n  CalcCompletedResult,\n  calculatePlaceable,\n  GridPos,\n  pickRandomShape,\n  PieceData,\n  removeCompleted,\n} from './components/piece/Piece';\nimport Score from './components/score/Score';\nimport PointsMessage, { PointsMessageData } from './components/pointsMessage/PointsMessage';\n\nconst initialShape = pickRandomShape();\nconst initialPlacedPieces:PieceData[] = [];\n\n// FOR TESTING (replace above code with this)\n// const initialShape = '3B_I_1';\n// const initialPlacedPieces:PieceData[] = [\n//   { gridX: 2, gridY: 1, shape: '2B_I_2' },\n//   { gridX: 2, gridY: 3, shape: '3B_I_2' },\n//   { gridX: 2, gridY: 6, shape: '3B_I_2' }\n// ];\n\nlet placeable:boolean[][] = calculatePlaceable(initialShape, initialPlacedPieces);\n\nfunction App() {\n  const [placedPieces, setPlacedPieces] = useState<PieceData[]>(initialPlacedPieces);\n  const [hoverPiece, setHoverPiece] = useState<PieceData | null>();\n  const [completedBlocks, setCompletedBlocks] = useState<PieceData[]>([]);\n  const [completableBlocks, setCompletableBlocks] = useState<PieceData[]>([]);\n  const [nextShape, setNextShape] = useState<string>(initialShape);\n  const [previousScore, setPreviousScore] = useState<number>(0);\n  const [score, setScore] = useState<number>(0);\n  const [pointsMessageData, setPointsMessageData] = useState<PointsMessageData>({ isShown:false });\n\n  const isPlaceable = (isInsideGrid:boolean, gridX:number, gridY:number): boolean => {\n    return isInsideGrid && placeable[gridX][gridY];\n  };\n\n  const updateNextShape = (placedPieces:PieceData[]) => {\n    const shape = pickRandomShape();\n    setNextShape(shape);\n    placeable = calculatePlaceable(shape, placedPieces);\n  };\n\n  const updatePlacedPieces = (newPlacedPiece:PieceData, placedPieces:PieceData[], { completedGridPositions }:CalcCompletedResult) => {\n    let newPlacedPieces = [...placedPieces, newPlacedPiece];\n\n    if (completedGridPositions.length > 0) {\n      // TODO have removeCompleted also return completedPieces instead of using a '1B' for each completedGridPositions\n      newPlacedPieces = removeCompleted(newPlacedPiece, placedPieces, completedGridPositions);\n    }\n    setPlacedPieces(newPlacedPieces);\n\n    return newPlacedPieces;\n  };\n\n  const toBlocks = (gridPositions:GridPos[]):PieceData[] => {\n    return gridPositions.map(p => { return { gridX:p.x, gridY:p.y, shape:'1B' }})\n  };\n\n  const updateCompletedBlocks = ({ completedGridPositions }:CalcCompletedResult) => {\n    if (completedGridPositions.length > 0) {\n      setCompletedBlocks(toBlocks(completedGridPositions));\n      window.setTimeout(() => { setCompletedBlocks([])}, 500);\n    }\n  };\n\n  const calcPoints = (placedBlocksKeptCount:number, completedRegionCount:number) => {\n    let points = placedBlocksKeptCount;\n    let pointsPerBlockCompleted = (completedRegionCount <= 2) ? 2 : 4;\n    points += (completedRegionCount * 9 * pointsPerBlockCompleted);\n    return points;\n  };\n\n  const showPointsMessage = (completedRegionCount: number, completedRegionCenter: GridPos, points: number) => {\n    setPointsMessageData({\n      gridX: completedRegionCenter.x,\n      gridY: completedRegionCenter.y,\n      points,\n      isCombo: completedRegionCount > 1,\n      isShown: true });\n    // Hide message after 2 secs\n    window.setTimeout(() => { setPointsMessageData({ isShown: false })}, 2000);\n  };\n\n  const updateScore = ({ placedBlocksKeptCount, completedRegionCount, completedRegionCenter }:CalcCompletedResult) => {\n    setPreviousScore(score);\n    const points = calcPoints(placedBlocksKeptCount, completedRegionCount);\n    setScore(score + points);\n    if (completedRegionCount > 0) {\n      showPointsMessage(completedRegionCount, completedRegionCenter, points);\n    }\n  };\n\n  const onPieceDrag = ({ isInsideGrid, gridX, gridY, shape }:any) => {\n    if (isPlaceable(isInsideGrid, gridX, gridY)) {\n      const placeablePiece = { gridX, gridY, shape };\n      const completable = calcCompleted(placeablePiece, placedPieces);\n      setCompletableBlocks(toBlocks(completable.completedGridPositions));\n      setHoverPiece(placeablePiece);\n    } else {\n      setCompletableBlocks([]);\n      setHoverPiece(null);\n    }\n  };\n\n  const onPieceDragStop = ({ isInsideGrid, gridX, gridY, shape }:any) => {\n    if (isPlaceable(isInsideGrid, gridX, gridY)) {\n      const newPlacedPiece = { gridX, gridY, shape };\n\n      const completed = calcCompleted(newPlacedPiece, placedPieces);\n      const newPlacedPieces = updatePlacedPieces(newPlacedPiece, placedPieces, completed);\n      updateCompletedBlocks(completed);\n      updateScore(completed);\n      updateNextShape(newPlacedPieces);\n    }\n    setCompletableBlocks([]);\n    setHoverPiece(null);\n  };\n\n  return (\n    <GameDimensionsProvider>\n      <div>\n        <Score previousScore={previousScore} currentScore={score}/>\n        <Grid placedPieces={placedPieces} hoverPiece={hoverPiece} completableBlocks={completableBlocks} completedBlocks={completedBlocks}/>\n        <DraggablePiece shape={nextShape} onDrag={onPieceDrag} onDragStop={onPieceDragStop}/>\n        <PointsMessage pointsMessageData={pointsMessageData}/>\n      </div>\n    </GameDimensionsProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}