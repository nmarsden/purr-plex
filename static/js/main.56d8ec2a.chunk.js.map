{"version":3,"sources":["components/grid/Grid.module.scss","components/draggablePiece/DraggablePiece.module.scss","components/pointsMessage/PointsMessage.module.scss","components/newGameButton/NewGameButton.module.scss","components/piece/Piece.module.scss","components/block/Block.module.scss","components/score/Score.module.scss","components/gameDimensionsProvider/GameDimensionsProvider.tsx","components/block/Block.tsx","components/piece/Piece.tsx","components/grid/Grid.tsx","components/draggablePiece/DraggablePiece.tsx","components/score/Score.tsx","components/pointsMessage/PointsMessage.tsx","components/newGameButton/NewGameButton.tsx","App.tsx","index.tsx"],"names":["module","exports","GameDimensionsCtx","createContext","getWindowDimensions","window","document","documentElement","width","clientWidth","height","clientHeight","GameDimensionsProvider","children","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","gridWidth","gridHeight","cellWidth","Math","floor","cellHeight","cellSize","min","gridSize","headerHeight","footerHeight","gridTop","gridLeft","gameDimensions","draggableLeft","draggableTop","newGameButtonLeft","newGameButtonTop","Provider","value","useGameDimensions","useContext","cx","classNames","bind","styles","Block","x","y","size","blockType","isPreDragging","isDragging","isMuted","isCompletable","inlineStyles","left","top","className","block","style","SHAPES","Map","offset","type","shapeToGridPositions","gridX","gridY","shape","get","map","b","initMultiDim","multiDim","arr","push","calculateOccupied","placedPieces","occupied","forEach","pp","gridPos","Piece","isDraggable","isCompleted","blocks","i","key","shapeToBlocks","shapeDims","shapeDimensions","containerClassName","container","pieceClassName","piece","pickRandomShape","Array","from","keys","random","blockSize","blockOffsets","minX","minY","maxX","maxY","len","length","calculatePlaceable","gridFlags","isAnyPos","isPlaceable","calcCompleted","newPlacedPiece","completedGridPositions","indices","completedColumnIndex","completedRowIndex","completed3x3Index","completedRegionCount","placedPieceGridPositions","includes","every","o","completedColumn","completedRow","gridPositions3x3","gridPositions","leftGridPos3x3","topGridPos3x3","xOffset","yOffset","getGridPositions3x3","index3x3","topLeftGridPos","row3x3","getIndex3x3","placedBlocksKeptCount","filter","some","c","completedRegionCenter","xPositions","p","yPositions","max","calcCompletedRegionCenter","hasNeighbours","index","target","isEqual","blockOffsets1","blockOffsets2","compareXThenY","o1","o2","findShape","sortedBlockOffsets","copyBlockOffsets","sort","sortBlockOffsets","calcSmallerPieces","placedPiece","smallerPieces","result","blockOffsetsWithNeighbours","groupBlockOffsetsByNeighbours","pieceBlockOffsets","completedBlockOffsets","blockOffset","removeCompletedBlockOffsets","pos","newPiece","createPiece","Grid","hoverPiece","completableBlocks","completedBlocks","gridInlineStyles","cellInlineStyles","rows","cellType","rowIndex","cells","split","ch","colIndex","cell","shadedCell","row","grid","DraggablePiece","onDrag","onDragStop","isDisabled","smallShapeDims","initialPosition","setIsPreDragging","setIsDragging","position","setPosition","dragStartYOffset","containerInlineStyles","pieceContainerClassName","toGridDragData","data","pieceRect","node","getBoundingClientRect","halfCellSize","isInsideGrid","onStart","e","onStop","gridDragData","disabled","Score","previousScore","currentScore","valueInlineStyles","fontSize","start","end","duration","PointsMessage","pointsMessageData","containerSize","containerTop","containerLeft","pointsHeight","pointsInlineStyles","lineHeight","isShown","points","isCombo","NewGameButton","onClick","containerHeight","containerWidth","buttonHeight","buttonWidth","borderRadius","buttonInlineStyles","button","initialShape","initialPlacedPieces","placeable","App","setPlacedPieces","setHoverPiece","setCompletedBlocks","setCompletableBlocks","nextShape","setNextShape","setPreviousScore","score","setScore","setPointsMessageData","isGameOver","setIsGameOver","updateNextShape","updatePlacedPieces","newPlacedPieces","completed","removeCompleted","toBlocks","updateScore","calcPoints","setTimeout","showPointsMessage","placeablePiece","completable","updateCompletedBlocks","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.56d8ec2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__3byWf\",\"row\":\"Grid_row__3iB0a\",\"cell\":\"Grid_cell__Gw65o\",\"shadedCell\":\"Grid_shadedCell__2xhfR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DraggablePiece_container__2WQE4\",\"isPreDragging\":\"DraggablePiece_isPreDragging__2WEyo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PointsMessage_container__kfyA8\",\"points\":\"PointsMessage_points__1CcWh\",\"flash\":\"PointsMessage_flash__3RSoB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NewGameButton_container__5XyCv\",\"button\":\"NewGameButton_button__vLJP1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Piece_container__HKwIh\",\"piece\":\"Piece_piece__21Hob\",\"isCompleted\":\"Piece_isCompleted__29xdv\",\"fade-out\":\"Piece_fade-out__1E-gz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Block_block__3k5af\",\"type1a\":\"Block_type1a__CE7pB\",\"type1b\":\"Block_type1b__1osI_\",\"type1c\":\"Block_type1c__19qYn\",\"type1d\":\"Block_type1d__2h7mH\",\"type2a\":\"Block_type2a__mNICL\",\"type2b\":\"Block_type2b__OWzjg\",\"type2c\":\"Block_type2c__36yJ6\",\"type2d\":\"Block_type2d__229xO\",\"type2e\":\"Block_type2e__2_wbq\",\"type2f\":\"Block_type2f__1h2dF\",\"type3a\":\"Block_type3a__UjqB1\",\"type3b\":\"Block_type3b__X-il1\",\"type3c\":\"Block_type3c__2ONk0\",\"type3d\":\"Block_type3d__3oMRT\",\"type4a\":\"Block_type4a__2ba0F\",\"isPreDragging\":\"Block_isPreDragging__3ZTOG\",\"isDragging\":\"Block_isDragging__3k0tt\",\"isMuted\":\"Block_isMuted__xzwBa\",\"isCompletable\":\"Block_isCompletable__14YK9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Score_container__1Fd1Q\"};","import React, { createContext, FunctionComponent, useContext, useEffect, useState } from 'react'\n\nconst GameDimensionsCtx = createContext<any>(null);\n\nfunction getWindowDimensions() {\n  const { clientWidth: width, clientHeight: height } = window.document.documentElement;\n  return {\n    width,\n    height\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nconst GameDimensionsProvider: FunctionComponent<any> = ({ children }) => {\n  const { width, height } = useWindowDimensions();\n\n  const gridSideMargin = width / 18;\n  const gridTopMargin = height / 9;\n  const gridBottomMargin = height / 2.5;\n\n  const gridWidth =  width - (gridSideMargin * 2);\n  const gridHeight =  height - (gridTopMargin + gridBottomMargin);\n\n  const cellWidth = Math.floor( gridWidth / 9 );\n  const cellHeight = Math.floor( gridHeight / 9 );\n\n  const cellSize = Math.min( cellWidth, cellHeight );\n  const gridSize = cellSize * 9;\n  const headerHeight = Math.floor( (height - gridSize) * 0.3 );\n  const footerHeight = Math.floor( (height - gridSize) * 0.7 );\n\n  const gridTop = headerHeight;\n  const gridLeft = Math.floor( ( width - gridSize ) / 2 );\n\n  const draggableLeft = Math.floor( gridLeft + (gridSize / 2) );\n  const draggableTop = Math.floor( gridTop + gridSize + (cellSize * 2.2) );\n\n  const newGameButtonLeft =  gridLeft;\n  const newGameButtonTop =  Math.floor( gridTop + gridSize + (cellSize * 3.6) );\n\n  const gameDimensions = {\n    cellSize,\n    gridSize,\n    gridLeft,\n    gridTop,\n    headerHeight,\n    footerHeight,\n    draggableLeft,\n    draggableTop,\n    newGameButtonLeft,\n    newGameButtonTop\n  };\n\n  return (\n    <GameDimensionsCtx.Provider value={gameDimensions}>\n      { children }\n    </GameDimensionsCtx.Provider>\n  )\n};\n\nexport default GameDimensionsProvider;\nexport const useGameDimensions = () => useContext(GameDimensionsCtx);","import React, { FunctionComponent } from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './Block.module.scss';\n\nlet cx = classNames.bind(styles);\n\nconst Block: FunctionComponent<any> = ({ x, y, size, blockType, isPreDragging, isDragging, isMuted, isCompletable }) => {\n  const inlineStyles = {\n    width: `${size + 1}px`,\n    height: `${size + 1}px`,\n    left: `${x - 1}px`,\n    top: `${y - 1}px`,\n  };\n\n  let className = cx({\n    block: true,\n    [`type${blockType}`]: true,\n    isPreDragging: isPreDragging,\n    isDragging: isDragging,\n    isMuted: isMuted,\n    isCompletable: isCompletable\n  });\n\n  return (\n    <div style={inlineStyles}\n         className={className}>\n    </div>\n  );\n};\n\nexport default Block;\n","import React, { FunctionComponent } from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './Piece.module.scss';\nimport { useGameDimensions } from '../gameDimensionsProvider/GameDimensionsProvider';\nimport Block from '../block/Block';\n\ntype BlockType = '1a' | '1b' | '1c'| '1d' | '2a' | '2b' | '2c'| '2d'| '2e' | '2f' | '3a' | '3b' | '3c' | '3d' | '4a';\n\ninterface BlockOffset {\n  x: number,\n  y: number\n}\n\ninterface BlockData {\n  offset:BlockOffset,\n  type:BlockType\n}\n\n// SHAPES: each shape has an associated array of BlockOffset which is ordered by x ascending and then y ascending\nconst SHAPES:Map<string, Array<BlockData>> = new Map([\n  ['1B',      [{offset:{x:0,y:0},type:'4a'}]],\n  ['2B_I_1',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'3a'}]],\n  ['2B_I_2',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'3b'}]],\n  ['3B_I_1',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'2e'}, {offset:{x:2,y:0},type:'3a'}]],\n  ['3B_I_2',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'2f'}, {offset:{x:0,y:2},type:'3b'}]],\n  ['3B_L_1',  [{offset:{x:0,y:1},type:'3c'}, {offset:{x:1,y:0},type:'3d'}, {offset:{x:1,y:1},type:'2b'}]],\n  ['3B_L_2',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'2a'}, {offset:{x:1,y:1},type:'3b'}]],\n  ['3B_L_3',  [{offset:{x:0,y:0},type:'2d'}, {offset:{x:0,y:1},type:'3b'}, {offset:{x:1,y:0},type:'3a'}]],\n  ['3B_L_4',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'2c'}, {offset:{x:1,y:1},type:'3a'}]],\n  ['4B_O',    [{offset:{x:0,y:0},type:'2d'}, {offset:{x:0,y:1},type:'2c'}, {offset:{x:1,y:0},type:'2a'}, {offset:{x:1,y:1},type:'2b'}]],\n  ['4B_L_1',  [{offset:{x:0,y:1},type:'3c'}, {offset:{x:1,y:1},type:'2e'}, {offset:{x:2,y:0},type:'3d'}, {offset:{x:2,y:1},type:'2b'}]],\n  ['4B_L_2',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'2a'}, {offset:{x:1,y:1},type:'2f'}, {offset:{x:1,y:2},type:'3b'}]],\n  ['4B_L_3',  [{offset:{x:0,y:0},type:'2d'}, {offset:{x:0,y:1},type:'3b'}, {offset:{x:1,y:0},type:'2e'}, {offset:{x:2,y:0},type:'3a'}]],\n  ['4B_L_4',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'2f'}, {offset:{x:0,y:2},type:'2c'}, {offset:{x:1,y:2},type:'3a'}]],\n  ['4B_J_1',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'2e'}, {offset:{x:2,y:0},type:'2a'}, {offset:{x:2,y:1},type:'3b'}]],\n  ['4B_J_2',  [{offset:{x:0,y:2},type:'3c'}, {offset:{x:1,y:0},type:'3d'}, {offset:{x:1,y:1},type:'2f'}, {offset:{x:1,y:2},type:'2b'}]],\n  ['4B_J_3',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'2c'}, {offset:{x:1,y:1},type:'2e'}, {offset:{x:2,y:1},type:'3a'}]],\n  ['4B_J_4',  [{offset:{x:0,y:0},type:'2d'}, {offset:{x:0,y:1},type:'2f'}, {offset:{x:0,y:2},type:'3b'}, {offset:{x:1,y:0},type:'3a'}]],\n  ['4B_Z_1',  [{offset:{x:0,y:1},type:'2d'}, {offset:{x:0,y:2},type:'3b'}, {offset:{x:1,y:0},type:'3d'}, {offset:{x:1,y:1},type:'2b'}]],\n  ['4B_Z_2',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'2a'}, {offset:{x:1,y:1},type:'2c'}, {offset:{x:2,y:1},type:'3a'}]],\n  ['4B_S_1',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'2c'}, {offset:{x:1,y:1},type:'2a'}, {offset:{x:1,y:2},type:'3b'}]],\n  ['4B_S_2',  [{offset:{x:0,y:1},type:'3c'}, {offset:{x:1,y:0},type:'2d'}, {offset:{x:1,y:1},type:'2b'}, {offset:{x:2,y:0},type:'3a'}]],\n  ['4B_T_1',  [{offset:{x:0,y:1},type:'3c'}, {offset:{x:1,y:0},type:'3d'}, {offset:{x:1,y:1},type:'1c'}, {offset:{x:2,y:1},type:'3a'}]],\n  ['4B_T_2',  [{offset:{x:0,y:1},type:'3c'}, {offset:{x:1,y:0},type:'3d'}, {offset:{x:1,y:1},type:'1b'}, {offset:{x:1,y:2},type:'3b'}]],\n  ['4B_T_3',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'1a'}, {offset:{x:1,y:1},type:'3b'}, {offset:{x:2,y:0},type:'3a'}]],\n  ['4B_T_4',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'1d'}, {offset:{x:0,y:2},type:'3b'}, {offset:{x:1,y:1},type:'3a'}]],\n  ['4B_I_1',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'2e'}, {offset:{x:2,y:0},type:'2e'}, {offset:{x:3,y:0},type:'3a'}]],\n  ['4B_I_2',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'2f'}, {offset:{x:0,y:2},type:'2f'}, {offset:{x:0,y:3},type:'3b'}]],\n]);\n\nconst shapeToBlocks = (x:number, y:number, size:number, shape:string, isPreDragging:boolean, isDragging:boolean, isMuted:boolean, isCompletable:boolean) => {\n  const blockData:BlockData[] = SHAPES.get(shape) || [];\n  return blockData.map( (b, i) =>\n    <Block key={i}\n           x={x+(b.offset.x * size)}\n           y={y+(b.offset.y * size)}\n           size={size}\n           blockType={isDragging ? '4a' : b.type}\n           isPreDragging={isPreDragging}\n           isDragging={isDragging}\n           isMuted={isMuted}\n           isCompletable={isCompletable}\n    />);\n};\n\nexport const shapeToGridPositions = (gridX:number, gridY:number, shape:string):Array<GridPos> => {\n  const blockData:BlockData[] = SHAPES.get(shape) || [];\n  return blockData.map(b => { return { x: gridX + b.offset.x, y: gridY + b.offset.y } });\n};\n\nconst getGridPositions3x3 = (gridPos:GridPos):GridPos[] => {\n  const gridPositions:GridPos[] = [];\n  const leftGridPos3x3 = Math.floor(gridPos.x / 3) * 3;\n  const topGridPos3x3 = Math.floor(gridPos.y / 3) * 3;\n  for (let xOffset=0; xOffset<3; xOffset++) {\n    for (let yOffset=0; yOffset<3; yOffset++) {\n      gridPositions.push({ x:leftGridPos3x3 + xOffset, y: topGridPos3x3 + yOffset });\n    }\n  }\n  return gridPositions;\n};\n\nconst initMultiDim = (value:boolean):boolean[][] => {\n  let multiDim = [];\n  for (let gridX=0; gridX<9; gridX++) {\n    let arr:boolean[] = [];\n    multiDim.push(arr);\n    for (let gridY=0; gridY<9; gridY++) {\n      arr.push(value);\n    }\n  }\n  return multiDim;\n};\n\nconst calculateOccupied = (placedPieces:PieceData[]):boolean[][] => {\n  let occupied = initMultiDim(false);\n  placedPieces.forEach(pp => {\n    shapeToGridPositions(pp.gridX, pp.gridY, pp.shape).forEach(gridPos => {\n      occupied[gridPos.x][gridPos.y] = true;\n    })\n  });\n  return occupied;\n};\n\nlet cx = classNames.bind(styles);\n\nconst Piece: FunctionComponent<any> = ({ x, y, shape, isDraggable, isPreDragging, isDragging, isMuted, isCompletable, isCompleted }) => {\n  const gameDimensions = useGameDimensions();\n  const cellSize = gameDimensions.cellSize;\n  const blockSize = (isDraggable && !isDragging) ? Math.floor(cellSize/2) : cellSize;\n  const blocks = shapeToBlocks(cellSize * x, cellSize * y, blockSize, shape, isPreDragging, isDragging, isMuted, isCompletable);\n\n  const shapeDims = shapeDimensions(shape, cellSize);\n  let inlineStyles = {\n    width: `${shapeDims.width}px`,\n    height: `${shapeDims.height}px`\n  };\n  let containerClassName = cx({\n    container: true,\n    isCompleted: isCompleted\n  });\n  let pieceClassName = cx({\n    piece: true,\n  });\n\n  return (\n    <div style={inlineStyles} className={containerClassName}>\n      <div style={inlineStyles} className={pieceClassName}>\n        {blocks}\n      </div>\n    </div>\n);\n};\n\nexport default Piece;\n\nexport interface GridPos {\n  x: number,\n  y: number\n}\n\nexport interface PieceData {\n  gridX: number,\n  gridY: number,\n  shape: string\n}\n\nexport const pickRandomShape = ():string => { return Array.from(SHAPES.keys())[Math.floor(Math.random() * SHAPES.size)] };\n\n// FOR TESTING (replace above code with this)\n// export const pickRandomShape = ():string => { return '3B_I_1' };\n\nexport const shapeDimensions = (shape:string, blockSize:number) => {\n  const blockData:BlockData[] = SHAPES.get(shape) || [];\n  const blockOffsets:BlockOffset[] = blockData.map(b => b.offset);\n\n  let minX = blockOffsets[0].x;\n  let minY = blockOffsets[0].y;\n  let maxX = blockOffsets[0].x;\n  let maxY = blockOffsets[0].y;\n\n  for (let i = 1, len=blockOffsets.length; i < len; i++) {\n    let x = blockOffsets[i].x;\n    let y = blockOffsets[i].y;\n    minX = (x < minX) ? x : minX;\n    minY = (y < minY) ? y : minY;\n    maxX = (x > maxX) ? x : maxX;\n    maxY = (y > maxY) ? y : maxY;\n  }\n  const width = (maxX - minX + 1) * blockSize;\n  const height = (maxY - minY + 1) * blockSize;\n  return { width, height };\n};\n\nexport interface Placeable {\n  gridFlags:boolean[][],\n  isAnyPos:boolean\n}\n\nexport const calculatePlaceable = (shape:string, placedPieces:PieceData[]):Placeable => {\n  const occupied:boolean[][] = calculateOccupied(placedPieces);\n  let gridFlags:boolean[][] = initMultiDim(false);\n  let isAnyPos = false;\n\n  for (let gridX=0; gridX<9; gridX++) {\n    for (let gridY=0; gridY<9; gridY++) {\n\n      let isPlaceable = true;\n      shapeToGridPositions(gridX, gridY, shape).forEach(gridPos => {\n        isPlaceable = isPlaceable && gridPos.x < 9 && gridPos.y < 9 && !occupied[gridPos.x][gridPos.y];\n      });\n      gridFlags[gridX][gridY] = isPlaceable;\n      if (isPlaceable) {\n        isAnyPos = true;\n      }\n    }\n  }\n  return { gridFlags, isAnyPos };\n};\n\nexport interface CalcCompletedResult {\n  completedGridPositions:GridPos[],\n  completedRegionCount:number,\n  completedRegionCenter:GridPos,\n  placedBlocksKeptCount:number\n}\n\nexport const calcCompleted = (newPlacedPiece:PieceData, placedPieces: PieceData[]): CalcCompletedResult => {\n\n  const completedGridPositions:GridPos[] = [];\n  const indices:number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n  const occupied:boolean[][] = calculateOccupied([...placedPieces, newPlacedPiece]);\n  const completedColumnIndex:number[] = [];\n  const completedRowIndex:number[] = [];\n  const completed3x3Index:number[] = [];\n  let completedRegionCount = 0;\n  const placedPieceGridPositions:GridPos[] = shapeToGridPositions(newPlacedPiece.gridX, newPlacedPiece.gridY, newPlacedPiece.shape);\n\n  const calcCompletedRegionCenter = (completedGridPositions:GridPos[]):GridPos => {\n    const xPositions = completedGridPositions.map(p => p.x);\n    const yPositions = completedGridPositions.map(p => p.y);\n    const minX = Math.min(...xPositions);\n    const maxX = Math.max(...xPositions);\n    const minY = Math.min(...yPositions);\n    const maxY = Math.max(...yPositions);\n\n    return { x: Math.floor(minX + (maxX - minX)/2), y: Math.floor(minY + (maxY - minY)/2) };\n  };\n\n  const getIndex3x3 = (topLeftGridPos:GridPos):number => {\n    const row3x3 = Math.floor((topLeftGridPos.y + 1) / 3);\n    const col3x3 = Math.floor((topLeftGridPos.x + 1) / 3);\n    return (3 * col3x3) + row3x3;\n  };\n\n  placedPieceGridPositions.forEach(gridPos => {\n    // Check for completed column\n    if (!completedColumnIndex.includes(gridPos.x) && occupied[gridPos.x].every(o => o)) {\n      const completedColumn:GridPos[] = indices.map(i => { return { x:gridPos.x, y:i }; });\n      completedGridPositions.push(...completedColumn);\n      completedRegionCount++;\n      completedColumnIndex.push(gridPos.x);\n    }\n    // Check for completed row\n    if (!completedRowIndex.includes(gridPos.y) && indices.every(i => occupied[i][gridPos.y])) {\n      const completedRow:GridPos[] = indices.map(i => { return { x:i, y:gridPos.y }; });\n      completedGridPositions.push(...completedRow);\n      completedRegionCount++;\n      completedRowIndex.push(gridPos.y);\n    }\n    // Check for completed 3x3\n    const gridPositions3x3 = getGridPositions3x3(gridPos);\n    const index3x3 = getIndex3x3(gridPositions3x3[0]);\n    if (!completed3x3Index.includes(index3x3) && gridPositions3x3.every(({x, y}) => occupied[x][y])) {\n      completedGridPositions.push(...gridPositions3x3);\n      completedRegionCount++;\n      completed3x3Index.push(index3x3);\n    }\n  });\n\n  // Calc placedBlocksKeptCount\n  const placedBlocksKept:GridPos[] = placedPieceGridPositions.filter(gridPos => !completedGridPositions.some(c => c.x === gridPos.x && c.y === gridPos.y));\n  const placedBlocksKeptCount = placedBlocksKept.length;\n\n  // Calc completedRegionCenter\n  const completedRegionCenter = calcCompletedRegionCenter(completedGridPositions);\n\n  return {\n    completedGridPositions,\n    completedRegionCount,\n    completedRegionCenter,\n    placedBlocksKeptCount\n  };\n};\n\nconst toBlockOffsets = (gridX: number, gridY: number, gridPositions: BlockOffset[]) => {\n  return gridPositions.map(pos => { return { x: (pos.x - gridX), y: (pos.y - gridY) } });\n};\n\nconst hasNeighbours = (blockOffsets:BlockOffset[], index:number):boolean => {\n  const target = blockOffsets[index];\n  return blockOffsets.some((offset) => (offset.x === target.x && offset.y === target.y+1) ||\n                                       (offset.x === target.x && offset.y === target.y-1) ||\n                                       (offset.y === target.y && offset.x === target.x+1) ||\n                                       (offset.y === target.y && offset.x === target.x-1));\n};\n\nconst removeCompletedBlockOffsets = (pieceBlockOffsets: BlockOffset[], completedBlockOffsets:BlockOffset[]):BlockOffset[] => {\n  return pieceBlockOffsets.filter(blockOffset => !completedBlockOffsets.some(c => c.x === blockOffset.x && c.y === blockOffset.y));\n};\n\nconst groupBlockOffsetsByNeighbours = (blockOffsets:BlockOffset[]):BlockOffset[][] => {\n  const result:BlockOffset[][] = [];\n  // Any blockOffset without neighbours is its own group\n  // Note: This strategy takes advantage of knowing that we are dealing with at most 3 block offsets, so there will be\n  // at most only be one group of blocks with neighbours, and any other groups will be single blocks without neighbours.\n  const blockOffsetsWithNeighbours:BlockOffset[] = [];\n  for (let i=0; i<blockOffsets.length; i++) {\n    if (hasNeighbours(blockOffsets, i)) {\n      blockOffsetsWithNeighbours.push(blockOffsets[i]);\n    } else {\n      result.push([blockOffsets[i]])\n    }\n  }\n  if (blockOffsetsWithNeighbours.length > 0) {\n    result.push(blockOffsetsWithNeighbours);\n  }\n  return result;\n};\n\nconst isEqual = (blockOffsets1: BlockOffset[], blockOffsets2: BlockOffset[]): boolean => {\n  return (blockOffsets1.length === blockOffsets2.length) &&\n         blockOffsets1.every((o, i) => (o.x === blockOffsets2[i].x) && (o.y === blockOffsets2[i].y));\n};\n\nconst copyBlockOffsets = (blockOffsets:BlockOffset[]):BlockOffset[] => {\n  return blockOffsets.map(o => { return { x:o.x, y:o.y } });\n};\n\nconst compareXThenY = (o1:BlockOffset, o2:BlockOffset):number => {\n  if (o1.x < o2.x) {\n    return -1;\n  }\n  if (o1.x > o2.x) {\n    return 1;\n  }\n  // o1.x equals o2.x\n  if (o1.y < o2.y) {\n    return -1;\n  }\n  return 0;\n};\n\nconst sortBlockOffsets = (blockOffsets:BlockOffset[]):BlockOffset[] => {\n  return copyBlockOffsets(blockOffsets).sort(compareXThenY);\n};\n\nconst findShape = (blockOffsets: BlockOffset[]):string => {\n  const sortedBlockOffsets:BlockOffset[] = sortBlockOffsets(blockOffsets);\n\n  for(let shape of Array.from( SHAPES.keys()) ) {\n    const blockData:BlockData[] = SHAPES.get(shape) || [];\n    const blockOffsets:BlockOffset[] = blockData.map(b => b.offset);\n\n    if (isEqual(sortedBlockOffsets, blockOffsets)) {\n      return shape;\n    }\n  }\n  return 'UNKNOWN';\n};\n\nconst createPiece = (gridX:number, gridY:number, blockOffsets:BlockOffset[]):PieceData => {\n  const minX = Math.min(...blockOffsets.map(o => o.x));\n  const minY = Math.min(...blockOffsets.map(o => o.y));\n  const newPiece:PieceData = {\n    gridX: gridX + minX,\n    gridY: gridY + minY,\n    shape: findShape(blockOffsets.map(o => { return { x: o.x - minX, y: o.y - minY } }))\n  };\n  return newPiece;\n};\n\nconst calcSmallerPieces = (placedPiece: PieceData, completedGridPositions: GridPos[]):PieceData[] => {\n  const smallerPieces:PieceData[] = [];\n  const blockData:BlockData[] = SHAPES.get(placedPiece.shape) || [];\n  const pieceBlockOffsets:BlockOffset[] = blockData.map(b => b.offset);\n\n  const completedBlockOffsets:BlockOffset[] = toBlockOffsets(placedPiece.gridX, placedPiece.gridY, completedGridPositions);\n  const remainingBlockOffsets:BlockOffset[] = removeCompletedBlockOffsets(pieceBlockOffsets, completedBlockOffsets);\n  const groupedBlockOffsets:BlockOffset[][] = groupBlockOffsetsByNeighbours(remainingBlockOffsets);\n  groupedBlockOffsets.forEach(blockOffsets => {\n    const newPiece:PieceData = createPiece(placedPiece.gridX, placedPiece.gridY, blockOffsets);\n    smallerPieces.push(newPiece);\n  });\n\n  return smallerPieces;\n};\n\nexport const removeCompleted = (newPlacedPiece: PieceData, placedPieces: PieceData[], completed:GridPos[]):PieceData[] => {\n  const newPlacedPieces:PieceData[] = [];\n\n  [...placedPieces, newPlacedPiece].forEach(placedPiece => {\n    const gridPositions:GridPos[] = shapeToGridPositions(placedPiece.gridX, placedPiece.gridY, placedPiece.shape);\n    const completedGridPositions = gridPositions.filter(gridPos => completed.some(c => c.x === gridPos.x && c.y === gridPos.y));\n\n    if (completedGridPositions.length === 0) {\n      // keep piece as is\n      newPlacedPieces.push(placedPiece);\n    } else if (completedGridPositions.length !== gridPositions.length) {\n      // keep piece as one or more smaller pieces\n      const smallerPieces:PieceData[] = calcSmallerPieces(placedPiece, completedGridPositions);\n      newPlacedPieces.push(...smallerPieces);\n    }\n  });\n  return newPlacedPieces;\n};\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport styles from './Grid.module.scss';\nimport { useGameDimensions } from '../gameDimensionsProvider/GameDimensionsProvider';\nimport Piece, { PieceData } from '../piece/Piece';\n\nconst Grid: FunctionComponent<any> = ({ placedPieces, hoverPiece, completableBlocks, completedBlocks }) => {\n  const cellTypes = [\n    'OOOXXXOOO',\n    'OOOXXXOOO',\n    'OOOXXXOOO',\n    'XXXOOOXXX',\n    'XXXOOOXXX',\n    'XXXOOOXXX',\n    'OOOXXXOOO',\n    'OOOXXXOOO',\n    'OOOXXXOOO'\n  ];\n  const gameDimensions = useGameDimensions();\n  const cellSize = gameDimensions.cellSize;\n  const gridInlineStyles = {\n    left: `${gameDimensions.gridLeft}px`,\n    top: `${gameDimensions.gridTop}px`\n  };\n  const cellInlineStyles = {\n    width: `${cellSize}px`,\n    height: `${cellSize}px`\n  };\n\n  const rows = cellTypes.map( (cellType, rowIndex) => {\n    const cells: Array<ReactNode> = [];\n    cellType.split('').forEach( (ch, colIndex) =>  {\n      cells.push(<div key={colIndex}\n                      style={cellInlineStyles}\n                      className={ch === 'O' ? styles.cell : styles.shadedCell}>\n                 </div>)\n    });\n    return <div key={rowIndex} className={styles.row}>{cells}</div>;\n  } );\n\n  return (\n    <div style={gridInlineStyles}\n         className={styles.grid}>\n      {rows}\n      {placedPieces.map( (p:PieceData, i:number) => <Piece key={i} x={p.gridX} y={p.gridY} shape={p.shape}/>)}\n      {hoverPiece && <Piece key={999} x={hoverPiece.gridX} y={hoverPiece.gridY} shape={hoverPiece.shape} isMuted={true}/>}\n      {completableBlocks.map( (p:PieceData, i:number) => <Piece key={100+i} x={p.gridX} y={p.gridY} shape={p.shape} isCompletable={true}/>)}\n      {completedBlocks.map( (p:PieceData, i:number) => <Piece key={200+i} x={p.gridX} y={p.gridY} shape={p.shape} isCompleted={true}/>)}\n    </div>\n  );\n};\n\nexport default Grid;\n","import React, { FunctionComponent, useState } from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './DraggablePiece.module.scss';\nimport { useGameDimensions } from '../gameDimensionsProvider/GameDimensionsProvider';\nimport Draggable, { DraggableData, DraggableEvent, DraggableEventHandler } from \"react-draggable\";\nimport Piece, { shapeDimensions } from '../piece/Piece';\n\nlet cx = classNames.bind(styles);\n\nconst DraggablePiece: FunctionComponent<any> = ({ shape, onDrag, onDragStop, isDisabled }) => {\n  const gameDimensions = useGameDimensions();\n  const shapeDims = shapeDimensions(shape, gameDimensions.cellSize);\n  const smallShapeDims = shapeDimensions(shape, gameDimensions.cellSize / 2);\n  const initialPosition = {\n    x: (shapeDims.width - smallShapeDims.width) / 2,\n    y: (shapeDims.height - smallShapeDims.height) / 2\n  };\n  const [isPreDragging, setIsPreDragging] = useState(true);\n  const [isDragging, setIsDragging] = useState(false);\n  const [position, setPosition] = useState(initialPosition);\n  const dragStartYOffset = -(gameDimensions.cellSize * 2);\n\n  if (!isDragging && position.x !== initialPosition.x && position.y !== initialPosition.y) {\n    setPosition(initialPosition);\n  }\n\n  let containerInlineStyles = {\n    left: `${gameDimensions.draggableLeft - (shapeDims.width / 2)}px`,\n    top: `${gameDimensions.draggableTop - (shapeDims.height / 2)}px`\n  };\n\n  let pieceContainerClassName = cx({\n    isPreDragging: isPreDragging,\n  });\n\n  const toGridDragData = (data: DraggableData) => {\n    const pieceRect = data.node.getBoundingClientRect();\n\n    const halfCellSize = gameDimensions.cellSize / 2;\n    const gridX = Math.floor( (pieceRect.left + halfCellSize - gameDimensions.gridLeft) / gameDimensions.cellSize );\n    const gridY = Math.floor( (pieceRect.top + halfCellSize - gameDimensions.gridTop) / gameDimensions.cellSize );\n    const isInsideGrid = gridX >= 0 && gridX <=8 && gridY >=0 && gridY <= 8;\n\n    return { isInsideGrid, gridX, gridY, shape };\n  };\n\n  const handleStart = () => {\n    setIsPreDragging(true);\n    setPosition({x:0,y:dragStartYOffset});\n    setIsDragging(true);\n  };\n  const handleDrag: DraggableEventHandler = (e: DraggableEvent, data: DraggableData) => {\n    setIsPreDragging(false);\n    onDrag(toGridDragData(data));\n  };\n  const handleStop: DraggableEventHandler = (e: DraggableEvent, data: DraggableData) => {\n    const gridDragData = toGridDragData(data);\n\n    setPosition(initialPosition);\n    setIsDragging(false);\n\n    onDragStop(gridDragData);\n  };\n\n  return (\n    <div style={containerInlineStyles} className={styles.container}>\n      <Draggable position={position}\n                 onStart={handleStart}\n                 onDrag={handleDrag}\n                 onStop={handleStop}\n                 disabled={isDisabled}>\n        <div className={pieceContainerClassName}>\n          <Piece x={0} y={0} shape={shape} isDraggable={true} isPreDragging={isPreDragging} isDragging={isDragging} isMuted={isDisabled}/>\n        </div>\n      </Draggable>\n    </div>\n  );\n};\n\nexport default DraggablePiece;\n","import React, { FunctionComponent } from 'react';\nimport styles from './Score.module.scss';\nimport { useGameDimensions } from '../gameDimensionsProvider/GameDimensionsProvider';\nimport CountUp from 'react-countup';\n\nconst Score: FunctionComponent<any> = ({ previousScore, currentScore }) => {\n  const gameDimensions = useGameDimensions();\n  const headerHeight = gameDimensions.headerHeight;\n  const cellSize = gameDimensions.cellSize;\n  const containerInlineStyles = {\n    height: `${headerHeight}px`,\n  };\n  const valueInlineStyles = {\n    height: `${cellSize*2}px`,\n    fontSize: `${cellSize}px`\n  };\n\n  return (\n    <div className={styles.container} style={containerInlineStyles}>\n      <div style={valueInlineStyles}>\n        <CountUp start={previousScore} end={currentScore} duration={1}/>\n      </div>\n    </div>\n  );\n};\n\nexport default Score;\n","import React, { FunctionComponent } from 'react';\nimport styles from './PointsMessage.module.scss';\nimport { useGameDimensions } from '../gameDimensionsProvider/GameDimensionsProvider';\n\nexport interface PointsMessageData {\n  gridX?: number,\n  gridY?: number,\n  points?: number,\n  isCombo?: boolean,\n  isShown: boolean\n}\n\nconst PointsMessage: FunctionComponent<any> = ({ pointsMessageData }) => {\n  const gameDimensions = useGameDimensions();\n  const cellSize = gameDimensions.cellSize;\n  const halfCellSize = gameDimensions.cellSize / 2;\n  const containerSize = cellSize * 3;\n  const containerTop = Math.floor(gameDimensions.gridTop + (pointsMessageData.gridY * cellSize) + halfCellSize - (containerSize/2));\n  const containerLeft = Math.floor(gameDimensions.gridLeft + (pointsMessageData.gridX * cellSize) + halfCellSize - (containerSize/2));\n  const containerInlineStyles = {\n    top: `${containerTop}px`,\n    left: `${containerLeft}px`,\n    width: `${containerSize}px`,\n    height: `${containerSize}px`,\n  };\n  const pointsHeight = Math.floor(0.75 * cellSize);\n  const pointsInlineStyles = {\n    height: `${pointsHeight}px`,\n    fontSize: `${pointsHeight}px`,\n    lineHeight: `${pointsHeight}px`\n  };\n\n  return (\n    <div className={styles.container} style={containerInlineStyles}>\n      {pointsMessageData.isShown ?\n        <div className={styles.points}\n             style={pointsInlineStyles}>\n          {pointsMessageData.isCombo ? <div>COMBO</div> : <></>}\n          <div>+{pointsMessageData.points}</div>\n        </div>\n        :\n        <></>\n      }\n    </div>\n  );\n};\n\nexport default PointsMessage;\n","import React, { FunctionComponent } from 'react';\nimport styles from './NewGameButton.module.scss';\nimport { useGameDimensions } from '../gameDimensionsProvider/GameDimensionsProvider';\n\nconst NewGameButton: FunctionComponent<any> = ({ isShown, onClick }) => {\n  const gameDimensions = useGameDimensions();\n  const cellSize = gameDimensions.cellSize;\n  const containerLeft = gameDimensions.newGameButtonLeft;\n  const containerTop = gameDimensions.newGameButtonTop;\n  const containerHeight = cellSize;\n  const containerWidth = gameDimensions.gridSize;\n  const containerInlineStyles = {\n    top: `${containerTop}px`,\n    left: `${containerLeft}px`,\n    height: `${containerHeight}px`,\n    width: `${containerWidth}px`,\n  };\n  const fontSize = cellSize * 0.8;\n  const buttonHeight = cellSize*1.2;\n  const buttonWidth = cellSize*5;\n  const borderRadius = Math.floor(buttonHeight * 0.1);\n  const buttonInlineStyles = {\n    height: `${buttonHeight}px`,\n    width: `${buttonWidth}px`,\n    borderRadius: `${borderRadius}px`,\n    fontSize: `${fontSize}px`,\n    lineHeight: `${buttonHeight}px`\n  };\n\n  return (\n    <div className={styles.container} style={containerInlineStyles}>\n      {isShown ? <div className={styles.button} style={buttonInlineStyles} onClick={onClick}>New Game</div> : <></>}\n    </div>\n  );\n};\n\nexport default NewGameButton;\n","import React, { useState } from 'react';\nimport GameDimensionsProvider from './components/gameDimensionsProvider/GameDimensionsProvider';\nimport Grid from './components/grid/Grid';\nimport DraggablePiece from './components/draggablePiece/DraggablePiece';\nimport {\n  calcCompleted,\n  CalcCompletedResult,\n  calculatePlaceable,\n  GridPos,\n  pickRandomShape,\n  PieceData,\n  Placeable,\n  removeCompleted,\n} from './components/piece/Piece';\nimport Score from './components/score/Score';\nimport PointsMessage, { PointsMessageData } from './components/pointsMessage/PointsMessage';\nimport NewGameButton from './components/newGameButton/NewGameButton';\n\nconst initialShape = pickRandomShape();\nconst initialPlacedPieces:PieceData[] = [];\n\n// FOR TESTING (replace above code with this)\n// const initialShape = '3B_I_1';\n// const initialPlacedPieces:PieceData[] = [\n//   { gridX: 2, gridY: 0, shape: '3B_I_2' },\n//   { gridX: 1, gridY: 3, shape: '3B_I_2' },\n//   { gridX: 2, gridY: 6, shape: '3B_I_2' },\n//   { gridX: 5, gridY: 0, shape: '3B_I_2' },\n//   { gridX: 4, gridY: 3, shape: '3B_I_2' },\n//   { gridX: 5, gridY: 6, shape: '3B_I_2' },\n//   { gridX: 8, gridY: 1, shape: '2B_I_2' },\n//   { gridX: 7, gridY: 3, shape: '3B_I_2' },\n//   { gridX: 8, gridY: 6, shape: '3B_I_2' }\n// ];\n\nlet placeable:Placeable = calculatePlaceable(initialShape, initialPlacedPieces);\n\nfunction App() {\n  const [placedPieces, setPlacedPieces] = useState<PieceData[]>(initialPlacedPieces);\n  const [hoverPiece, setHoverPiece] = useState<PieceData | null>();\n  const [completedBlocks, setCompletedBlocks] = useState<PieceData[]>([]);\n  const [completableBlocks, setCompletableBlocks] = useState<PieceData[]>([]);\n  const [nextShape, setNextShape] = useState<string>(initialShape);\n  const [previousScore, setPreviousScore] = useState<number>(0);\n  const [score, setScore] = useState<number>(0);\n  const [pointsMessageData, setPointsMessageData] = useState<PointsMessageData>({ isShown:false });\n  const [isGameOver, setIsGameOver] = useState<boolean>(false);\n\n  const isPlaceable = (isInsideGrid:boolean, gridX:number, gridY:number): boolean => {\n    return isInsideGrid && placeable.gridFlags[gridX][gridY];\n  };\n\n  const updateNextShape = (placedPieces:PieceData[]) => {\n    const shape = pickRandomShape();\n    setNextShape(shape);\n    placeable = calculatePlaceable(shape, placedPieces);\n  };\n\n  const isGameFinished = ():boolean => {\n    return !placeable.isAnyPos;\n  };\n\n  const updatePlacedPieces = (newPlacedPiece:PieceData, placedPieces:PieceData[], { completedGridPositions }:CalcCompletedResult) => {\n    let newPlacedPieces = [...placedPieces, newPlacedPiece];\n\n    if (completedGridPositions.length > 0) {\n      // TODO have removeCompleted also return completedPieces instead of using a '1B' for each completedGridPositions\n      newPlacedPieces = removeCompleted(newPlacedPiece, placedPieces, completedGridPositions);\n    }\n    setPlacedPieces(newPlacedPieces);\n\n    return newPlacedPieces;\n  };\n\n  const toBlocks = (gridPositions:GridPos[]):PieceData[] => {\n    return gridPositions.map(p => { return { gridX:p.x, gridY:p.y, shape:'1B' }})\n  };\n\n  const updateCompletedBlocks = ({ completedGridPositions }:CalcCompletedResult) => {\n    if (completedGridPositions.length > 0) {\n      setCompletedBlocks(toBlocks(completedGridPositions));\n      window.setTimeout(() => { setCompletedBlocks([])}, 500);\n    }\n  };\n\n  const calcPoints = (placedBlocksKeptCount:number, completedRegionCount:number) => {\n    let points = placedBlocksKeptCount;\n    let pointsPerBlockCompleted = (completedRegionCount <= 2) ? 2 : 4;\n    points += (completedRegionCount * 9 * pointsPerBlockCompleted);\n    return points;\n  };\n\n  const showPointsMessage = (completedRegionCount: number, completedRegionCenter: GridPos, points: number) => {\n    setPointsMessageData({\n      gridX: completedRegionCenter.x,\n      gridY: completedRegionCenter.y,\n      points,\n      isCombo: completedRegionCount > 1,\n      isShown: true });\n    // Hide message after 2 secs\n    window.setTimeout(() => { setPointsMessageData({ isShown: false })}, 2000);\n  };\n\n  const updateScore = ({ placedBlocksKeptCount, completedRegionCount, completedRegionCenter }:CalcCompletedResult) => {\n    setPreviousScore(score);\n    const points = calcPoints(placedBlocksKeptCount, completedRegionCount);\n    setScore(score + points);\n    if (completedRegionCount > 0) {\n      showPointsMessage(completedRegionCount, completedRegionCenter, points);\n    }\n  };\n\n  const onPieceDrag = ({ isInsideGrid, gridX, gridY, shape }:any) => {\n    if (isPlaceable(isInsideGrid, gridX, gridY)) {\n      const placeablePiece = { gridX, gridY, shape };\n      const completable = calcCompleted(placeablePiece, placedPieces);\n      setCompletableBlocks(toBlocks(completable.completedGridPositions));\n      setHoverPiece(placeablePiece);\n    } else {\n      setCompletableBlocks([]);\n      setHoverPiece(null);\n    }\n  };\n\n  const onPieceDragStop = ({ isInsideGrid, gridX, gridY, shape }:any) => {\n    if (isPlaceable(isInsideGrid, gridX, gridY)) {\n      const newPlacedPiece = { gridX, gridY, shape };\n\n      const completed = calcCompleted(newPlacedPiece, placedPieces);\n      const newPlacedPieces = updatePlacedPieces(newPlacedPiece, placedPieces, completed);\n      updateCompletedBlocks(completed);\n      updateScore(completed);\n      updateNextShape(newPlacedPieces);\n      if (isGameFinished()) {\n        setIsGameOver(true);\n      }\n    }\n    setCompletableBlocks([]);\n    setHoverPiece(null);\n  };\n\n  const initNewGame = () => {\n    setPlacedPieces([]);\n    updateNextShape([]);\n    setPreviousScore(0);\n    setScore(0);\n    setIsGameOver(false);\n  };\n\n  const onNewGameButtonClick = () => {\n    initNewGame();\n  };\n\n  return (\n    <GameDimensionsProvider>\n      <div>\n        <Score previousScore={previousScore} currentScore={score}/>\n        <Grid placedPieces={placedPieces} hoverPiece={hoverPiece} completableBlocks={completableBlocks} completedBlocks={completedBlocks}/>\n        <DraggablePiece shape={nextShape} onDrag={onPieceDrag} onDragStop={onPieceDragStop} isDisabled={isGameOver}/>\n        <PointsMessage pointsMessageData={pointsMessageData}/>\n        <NewGameButton isShown={isGameOver} onClick={onNewGameButtonClick}/>\n      </div>\n    </GameDimensionsProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}