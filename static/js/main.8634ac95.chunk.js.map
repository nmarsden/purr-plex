{"version":3,"sources":["components/grid/Grid.module.scss","components/draggablePiece/DraggablePiece.module.scss","components/gameHeader/GameHeader.module.scss","components/piece/Piece.module.scss","components/block/Block.module.scss","components/gameDimensionsProvider/GameDimensionsProvider.tsx","components/gameHeader/GameHeader.tsx","components/block/Block.tsx","components/piece/Piece.tsx","components/grid/Grid.tsx","components/draggablePiece/DraggablePiece.tsx","App.tsx","index.tsx"],"names":["module","exports","GameDimensionsCtx","createContext","getWindowDimensions","window","document","documentElement","width","clientWidth","height","clientHeight","GameDimensionsProvider","children","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","gridWidth","gridHeight","cellWidth","Math","floor","cellHeight","cellSize","min","gridSize","headerHeight","footerHeight","gridTop","gridLeft","gameDimensions","draggableLeft","draggableTop","Provider","value","useGameDimensions","useContext","GameHeader","inlineStyles","className","styles","header","style","cx","classNames","bind","Block","x","y","size","blockType","isPreDragging","isDragging","isMuted","left","top","block","SHAPES","Map","offset","type","shapeToGridPositions","gridX","gridY","shape","get","map","b","initMultiDim","multiDim","arr","push","calculateOccupied","placedPieces","occupied","forEach","pp","gridPos","Piece","isDraggable","isCompleted","blocks","i","key","shapeToBlocks","shapeDims","shapeDimensions","containerClassName","container","pieceClassName","piece","pickRandomShape","Array","from","keys","random","blockSize","blockOffsets","minX","minY","maxX","maxY","len","length","calculatePlaceable","placeable","isPlaceable","getCompletedGridPositions","completed","indices","every","o","completedColumn","completedRow","gridPositions3x3","gridPositions","leftGridPos3x3","topGridPos3x3","xOffset","yOffset","getGridPositions3x3","hasNeighbours","index","target","some","isEqual","blockOffsets1","blockOffsets2","compareXThenY","o1","o2","findShape","sortedBlockOffsets","copyBlockOffsets","sort","sortBlockOffsets","calcSmallerPieces","placedPiece","completedGridPositions","smallerPieces","result","blockOffsetsWithNeighbours","groupBlockOffsetsByNeighbours","pieceBlockOffsets","completedBlockOffsets","filter","blockOffset","c","removeCompletedBlockOffsets","pos","newPiece","createPiece","Grid","hoverPiece","completedBlocks","gridInlineStyles","cellInlineStyles","rows","cellType","rowIndex","cells","split","ch","colIndex","cell","shadedCell","row","grid","p","DraggablePiece","onDrag","onDragStop","smallShapeDims","initialPosition","setIsPreDragging","setIsDragging","position","setPosition","dragStartYOffset","containerInlineStyles","pieceContainerClassName","toGridDragData","data","pieceRect","node","getBoundingClientRect","halfCellSize","isInsideGrid","onStart","e","onStop","gridDragData","initialShape","initialPlacedPieces","App","setPlacedPieces","setHoverPiece","setCompletedBlocks","nextShape","setNextShape","newPlacedPieces","removeCompleted","setTimeout","updateNextShape","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8634ac95.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__3byWf\",\"row\":\"Grid_row__3iB0a\",\"cell\":\"Grid_cell__Gw65o\",\"shadedCell\":\"Grid_shadedCell__2xhfR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DraggablePiece_container__2WQE4\",\"isPreDragging\":\"DraggablePiece_isPreDragging__2WEyo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"GameHeader_header__31vrO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Piece_container__HKwIh\",\"piece\":\"Piece_piece__21Hob\",\"isCompleted\":\"Piece_isCompleted__29xdv\",\"fade-out\":\"Piece_fade-out__1E-gz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Block_block__3k5af\",\"type1a\":\"Block_type1a__CE7pB\",\"type1b\":\"Block_type1b__1osI_\",\"type1c\":\"Block_type1c__19qYn\",\"type1d\":\"Block_type1d__2h7mH\",\"type2a\":\"Block_type2a__mNICL\",\"type2b\":\"Block_type2b__OWzjg\",\"type2c\":\"Block_type2c__36yJ6\",\"type2d\":\"Block_type2d__229xO\",\"type2e\":\"Block_type2e__2_wbq\",\"type2f\":\"Block_type2f__1h2dF\",\"type3a\":\"Block_type3a__UjqB1\",\"type3b\":\"Block_type3b__X-il1\",\"type3c\":\"Block_type3c__2ONk0\",\"type3d\":\"Block_type3d__3oMRT\",\"type4a\":\"Block_type4a__2ba0F\",\"isPreDragging\":\"Block_isPreDragging__3ZTOG\",\"isDragging\":\"Block_isDragging__3k0tt\",\"isMuted\":\"Block_isMuted__xzwBa\"};","import React, { createContext, FunctionComponent, useContext, useEffect, useState } from 'react'\n\nconst GameDimensionsCtx = createContext<any>(null);\n\nfunction getWindowDimensions() {\n  const { clientWidth: width, clientHeight: height } = window.document.documentElement;\n  return {\n    width,\n    height\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nconst GameDimensionsProvider: FunctionComponent<any> = ({ children }) => {\n  const { width, height } = useWindowDimensions();\n\n  const gridSideMargin = width / 18;\n  const gridTopMargin = height / 18;\n  const gridBottomMargin = height / 3;\n\n  const gridWidth =  width - (gridSideMargin * 2);\n  const gridHeight =  height - (gridTopMargin + gridBottomMargin);\n\n  const cellWidth = Math.floor( gridWidth / 9 );\n  const cellHeight = Math.floor( gridHeight / 9 );\n\n  const cellSize = Math.min( cellWidth, cellHeight );\n  const gridSize = cellSize * 9;\n  const headerHeight = Math.floor( (height - gridSize) * 0.4 );\n  const footerHeight = Math.floor( (height - gridSize) * 0.6 );\n\n  const gridTop = headerHeight;\n  const gridLeft = Math.floor( ( width - gridSize ) / 2 );\n\n  const draggableLeft = Math.floor(gridLeft + (gridSize / 2) );\n  const draggableTop = Math.floor( gridTop + gridSize + (cellSize * 2.2) );\n\n  const gameDimensions = {\n    cellSize,\n    gridSize,\n    gridLeft,\n    gridTop,\n    headerHeight,\n    footerHeight,\n    draggableLeft,\n    draggableTop\n  };\n\n  return (\n    <GameDimensionsCtx.Provider value={gameDimensions}>\n      { children }\n    </GameDimensionsCtx.Provider>\n  )\n};\n\nexport default GameDimensionsProvider;\nexport const useGameDimensions = () => useContext(GameDimensionsCtx);","import React from 'react';\nimport styles from './GameHeader.module.scss';\nimport { useGameDimensions } from '../gameDimensionsProvider/GameDimensionsProvider';\n\nfunction GameHeader() {\n  const gameDimensions = useGameDimensions();\n  const headerHeight = gameDimensions.headerHeight;\n  const inlineStyles = {\n    height: `${headerHeight}px`\n  };\n\n  return (\n    <div className={styles.header} style={inlineStyles}></div>\n  );\n}\n\nexport default GameHeader;\n","import React, { FunctionComponent } from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './Block.module.scss';\n\nlet cx = classNames.bind(styles);\n\nconst Block: FunctionComponent<any> = ({ x, y, size, blockType, isPreDragging, isDragging, isMuted }) => {\n  const inlineStyles = {\n    width: `${size + 1}px`,\n    height: `${size + 1}px`,\n    left: `${x - 1}px`,\n    top: `${y - 1}px`,\n  };\n\n  let className = cx({\n    block: true,\n    [`type${blockType}`]: true,\n    isPreDragging: isPreDragging,\n    isDragging: isDragging,\n    isMuted: isMuted\n  });\n\n  return (\n    <div style={inlineStyles}\n         className={className}>\n    </div>\n  );\n};\n\nexport default Block;\n","import React, { FunctionComponent } from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './Piece.module.scss';\nimport { useGameDimensions } from '../gameDimensionsProvider/GameDimensionsProvider';\nimport Block from '../block/Block';\n\ntype BlockType = '1a' | '1b' | '1c'| '1d' | '2a' | '2b' | '2c'| '2d'| '2e' | '2f' | '3a' | '3b' | '3c' | '3d' | '4a';\n\ninterface BlockOffset {\n  x: number,\n  y: number\n}\n\ninterface BlockData {\n  offset:BlockOffset,\n  type:BlockType\n}\n\n// SHAPES: each shape has an associated array of BlockOffset which is ordered by x ascending and then y ascending\nconst SHAPES:Map<string, Array<BlockData>> = new Map([\n  ['1B',      [{offset:{x:0,y:0},type:'4a'}]],\n  ['2B_I_1',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'3a'}]],\n  ['2B_I_2',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'3b'}]],\n  ['3B_I_1',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'2e'}, {offset:{x:2,y:0},type:'3a'}]],\n  ['3B_I_2',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'2f'}, {offset:{x:0,y:2},type:'3b'}]],\n  ['3B_L_1',  [{offset:{x:0,y:1},type:'3c'}, {offset:{x:1,y:0},type:'3d'}, {offset:{x:1,y:1},type:'2b'}]],\n  ['3B_L_2',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'2a'}, {offset:{x:1,y:1},type:'3b'}]],\n  ['3B_L_3',  [{offset:{x:0,y:0},type:'2d'}, {offset:{x:0,y:1},type:'3b'}, {offset:{x:1,y:0},type:'3a'}]],\n  ['3B_L_4',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'2c'}, {offset:{x:1,y:1},type:'3a'}]],\n  ['4B_O',    [{offset:{x:0,y:0},type:'2d'}, {offset:{x:0,y:1},type:'2c'}, {offset:{x:1,y:0},type:'2a'}, {offset:{x:1,y:1},type:'2b'}]],\n  ['4B_L_1',  [{offset:{x:0,y:1},type:'3c'}, {offset:{x:1,y:1},type:'2e'}, {offset:{x:2,y:0},type:'3d'}, {offset:{x:2,y:1},type:'2b'}]],\n  ['4B_L_2',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'2a'}, {offset:{x:1,y:1},type:'2f'}, {offset:{x:1,y:2},type:'3b'}]],\n  ['4B_L_3',  [{offset:{x:0,y:0},type:'2d'}, {offset:{x:0,y:1},type:'3b'}, {offset:{x:1,y:0},type:'2e'}, {offset:{x:2,y:0},type:'3a'}]],\n  ['4B_L_4',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'2f'}, {offset:{x:0,y:2},type:'2c'}, {offset:{x:1,y:2},type:'3a'}]],\n  ['4B_J_1',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'2e'}, {offset:{x:2,y:0},type:'2a'}, {offset:{x:2,y:1},type:'3b'}]],\n  ['4B_J_2',  [{offset:{x:0,y:2},type:'3c'}, {offset:{x:1,y:0},type:'3d'}, {offset:{x:1,y:1},type:'2f'}, {offset:{x:1,y:2},type:'2b'}]],\n  ['4B_J_3',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'2c'}, {offset:{x:1,y:1},type:'2e'}, {offset:{x:2,y:1},type:'3a'}]],\n  ['4B_J_4',  [{offset:{x:0,y:0},type:'2d'}, {offset:{x:0,y:1},type:'2f'}, {offset:{x:0,y:2},type:'3b'}, {offset:{x:1,y:0},type:'3a'}]],\n  ['4B_Z_1',  [{offset:{x:0,y:1},type:'2d'}, {offset:{x:0,y:2},type:'3b'}, {offset:{x:1,y:0},type:'3d'}, {offset:{x:1,y:1},type:'2b'}]],\n  ['4B_Z_2',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'2a'}, {offset:{x:1,y:1},type:'2c'}, {offset:{x:2,y:1},type:'3a'}]],\n  ['4B_S_1',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'2c'}, {offset:{x:1,y:1},type:'2a'}, {offset:{x:1,y:2},type:'3b'}]],\n  ['4B_S_2',  [{offset:{x:0,y:1},type:'3c'}, {offset:{x:1,y:0},type:'2d'}, {offset:{x:1,y:1},type:'2b'}, {offset:{x:2,y:0},type:'3a'}]],\n  ['4B_T_1',  [{offset:{x:0,y:1},type:'3c'}, {offset:{x:1,y:0},type:'3d'}, {offset:{x:1,y:1},type:'1c'}, {offset:{x:2,y:1},type:'3a'}]],\n  ['4B_T_2',  [{offset:{x:0,y:1},type:'3c'}, {offset:{x:1,y:0},type:'3d'}, {offset:{x:1,y:1},type:'1b'}, {offset:{x:1,y:2},type:'3b'}]],\n  ['4B_T_3',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'1a'}, {offset:{x:1,y:1},type:'3b'}, {offset:{x:2,y:0},type:'3a'}]],\n  ['4B_T_4',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'1d'}, {offset:{x:0,y:2},type:'3b'}, {offset:{x:1,y:1},type:'3a'}]],\n  ['4B_I_1',  [{offset:{x:0,y:0},type:'3c'}, {offset:{x:1,y:0},type:'2e'}, {offset:{x:2,y:0},type:'2e'}, {offset:{x:3,y:0},type:'3a'}]],\n  ['4B_I_2',  [{offset:{x:0,y:0},type:'3d'}, {offset:{x:0,y:1},type:'2f'}, {offset:{x:0,y:2},type:'2f'}, {offset:{x:0,y:3},type:'3b'}]],\n]);\n\nconst shapeToBlocks = (x:number, y:number, size:number, shape:string, isPreDragging:boolean, isDragging:boolean, isMuted:boolean) => {\n  const blockData:BlockData[] = SHAPES.get(shape) || [];\n  return blockData.map( (b, i) =>\n    <Block key={i}\n           x={x+(b.offset.x * size)}\n           y={y+(b.offset.y * size)}\n           size={size}\n           blockType={isDragging ? '4a' : b.type}\n           isPreDragging={isPreDragging}\n           isDragging={isDragging}\n           isMuted={isMuted}\n    />);\n};\n\nexport const shapeToGridPositions = (gridX:number, gridY:number, shape:string):Array<GridPos> => {\n  const blockData:BlockData[] = SHAPES.get(shape) || [];\n  return blockData.map(b => { return { x: gridX + b.offset.x, y: gridY + b.offset.y } });\n};\n\nconst getGridPositions3x3 = (gridPos:GridPos):GridPos[] => {\n  const gridPositions:GridPos[] = [];\n  const leftGridPos3x3 = Math.floor(gridPos.x / 3) * 3;\n  const topGridPos3x3 = Math.floor(gridPos.y / 3) * 3;\n  for (let xOffset=0; xOffset<3; xOffset++) {\n    for (let yOffset=0; yOffset<3; yOffset++) {\n      gridPositions.push({ x:leftGridPos3x3 + xOffset, y: topGridPos3x3 + yOffset });\n    }\n  }\n  return gridPositions;\n};\n\nconst initMultiDim = (value:boolean):boolean[][] => {\n  let multiDim = [];\n  for (let gridX=0; gridX<9; gridX++) {\n    let arr:boolean[] = [];\n    multiDim.push(arr);\n    for (let gridY=0; gridY<9; gridY++) {\n      arr.push(value);\n    }\n  }\n  return multiDim;\n};\n\nconst calculateOccupied = (placedPieces:PieceData[]):boolean[][] => {\n  let occupied = initMultiDim(false);\n  placedPieces.forEach(pp => {\n    shapeToGridPositions(pp.gridX, pp.gridY, pp.shape).forEach(gridPos => {\n      occupied[gridPos.x][gridPos.y] = true;\n    })\n  });\n  return occupied;\n};\n\nlet cx = classNames.bind(styles);\n\nconst Piece: FunctionComponent<any> = ({ x, y, shape, isDraggable, isPreDragging, isDragging, isMuted, isCompleted }) => {\n  const gameDimensions = useGameDimensions();\n  const cellSize = gameDimensions.cellSize;\n  const blockSize = (isDraggable && !isDragging) ? Math.floor(cellSize/2) : cellSize;\n  const blocks = shapeToBlocks(cellSize * x, cellSize * y, blockSize, shape, isPreDragging, isDragging, isMuted);\n\n  const shapeDims = shapeDimensions(shape, cellSize);\n  let inlineStyles = {\n    width: `${shapeDims.width}px`,\n    height: `${shapeDims.height}px`\n  };\n  let containerClassName = cx({\n    container: true,\n    isCompleted: isCompleted\n  });\n  let pieceClassName = cx({\n    piece: true,\n  });\n\n  return (\n    <div style={inlineStyles} className={containerClassName}>\n      <div style={inlineStyles} className={pieceClassName}>\n        {blocks}\n      </div>\n    </div>\n);\n};\n\nexport default Piece;\n\nexport interface GridPos {\n  x: number,\n  y: number\n}\n\nexport interface PieceData {\n  gridX: number,\n  gridY: number,\n  shape: string\n}\n\nexport const pickRandomShape = ():string => { return Array.from(SHAPES.keys())[Math.floor(Math.random() * SHAPES.size)] };\n\n// FOR TESTING (replace above code with this)\n// export const pickRandomShape = ():string => { return '3B_I_1' };\n\nexport const shapeDimensions = (shape:string, blockSize:number) => {\n  const blockData:BlockData[] = SHAPES.get(shape) || [];\n  const blockOffsets:BlockOffset[] = blockData.map(b => b.offset);\n\n  let minX = blockOffsets[0].x;\n  let minY = blockOffsets[0].y;\n  let maxX = blockOffsets[0].x;\n  let maxY = blockOffsets[0].y;\n\n  for (let i = 1, len=blockOffsets.length; i < len; i++) {\n    let x = blockOffsets[i].x;\n    let y = blockOffsets[i].y;\n    minX = (x < minX) ? x : minX;\n    minY = (y < minY) ? y : minY;\n    maxX = (x > maxX) ? x : maxX;\n    maxY = (y > maxY) ? y : maxY;\n  }\n  const width = (maxX - minX + 1) * blockSize;\n  const height = (maxY - minY + 1) * blockSize;\n  return { width, height };\n};\n\nexport const calculatePlaceable = (shape:string, placedPieces:PieceData[]):boolean[][] => {\n  const occupied:boolean[][] = calculateOccupied(placedPieces);\n  let placeable:boolean[][] = initMultiDim(false);\n\n  for (let gridX=0; gridX<9; gridX++) {\n    for (let gridY=0; gridY<9; gridY++) {\n\n      let isPlaceable = true;\n      shapeToGridPositions(gridX, gridY, shape).forEach(gridPos => {\n        isPlaceable = isPlaceable && gridPos.x < 9 && gridPos.y < 9 && !occupied[gridPos.x][gridPos.y];\n      });\n      placeable[gridX][gridY] = isPlaceable;\n    }\n  }\n  return placeable;\n};\n\nexport const getCompletedGridPositions = ({ gridX, gridY, shape }:PieceData, placedPieces: PieceData[]): GridPos[] => {\n  const completed:GridPos[] = [];\n  const indices:number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n  const occupied:boolean[][] = calculateOccupied(placedPieces);\n  shapeToGridPositions(gridX, gridY, shape).forEach(gridPos => {\n    // Check for completed column\n    if (occupied[gridPos.x].every(o => o)) {\n      const completedColumn:GridPos[] = indices.map(i => { return { x:gridPos.x, y:i }; });\n      completed.push(...completedColumn);\n    }\n    // Check for completed row\n    if (indices.every(i => occupied[i][gridPos.y])) {\n      const completedRow:GridPos[] = indices.map(i => { return { x:i, y:gridPos.y }; });\n      completed.push(...completedRow);\n    }\n    // Check for completed 3x3\n    const gridPositions3x3 = getGridPositions3x3(gridPos);\n    if (gridPositions3x3.every(({x, y}) => occupied[x][y])) {\n      completed.push(...gridPositions3x3);\n    }\n  });\n\n  return completed;\n};\n\nconst toBlockOffsets = (gridX: number, gridY: number, gridPositions: BlockOffset[]) => {\n  return gridPositions.map(pos => { return { x: (pos.x - gridX), y: (pos.y - gridY) } });\n};\n\nconst hasNeighbours = (blockOffsets:BlockOffset[], index:number):boolean => {\n  const target = blockOffsets[index];\n  return blockOffsets.some((offset) => (offset.x === target.x && offset.y === target.y+1) ||\n                                       (offset.x === target.x && offset.y === target.y-1) ||\n                                       (offset.y === target.y && offset.x === target.x+1) ||\n                                       (offset.y === target.y && offset.x === target.x-1));\n};\n\nconst removeCompletedBlockOffsets = (pieceBlockOffsets: BlockOffset[], completedBlockOffsets:BlockOffset[]):BlockOffset[] => {\n  return pieceBlockOffsets.filter(blockOffset => !completedBlockOffsets.some(c => c.x === blockOffset.x && c.y === blockOffset.y));\n};\n\nconst groupBlockOffsetsByNeighbours = (blockOffsets:BlockOffset[]):BlockOffset[][] => {\n  const result:BlockOffset[][] = [];\n  // Any blockOffset without neighbours is its own group\n  // Note: This strategy takes advantage of knowing that we are dealing with at most 3 block offsets, so there will be\n  // at most only be one group of blocks with neighbours, and any other groups will be single blocks without neighbours.\n  const blockOffsetsWithNeighbours:BlockOffset[] = [];\n  for (let i=0; i<blockOffsets.length; i++) {\n    if (hasNeighbours(blockOffsets, i)) {\n      blockOffsetsWithNeighbours.push(blockOffsets[i]);\n    } else {\n      result.push([blockOffsets[i]])\n    }\n  }\n  if (blockOffsetsWithNeighbours.length > 0) {\n    result.push(blockOffsetsWithNeighbours);\n  }\n  return result;\n};\n\nconst isEqual = (blockOffsets1: BlockOffset[], blockOffsets2: BlockOffset[]): boolean => {\n  return (blockOffsets1.length === blockOffsets2.length) &&\n         blockOffsets1.every((o, i) => (o.x === blockOffsets2[i].x) && (o.y === blockOffsets2[i].y));\n};\n\nconst copyBlockOffsets = (blockOffsets:BlockOffset[]):BlockOffset[] => {\n  return blockOffsets.map(o => { return { x:o.x, y:o.y } });\n};\n\nconst compareXThenY = (o1:BlockOffset, o2:BlockOffset):number => {\n  if (o1.x < o2.x) {\n    return -1;\n  }\n  if (o1.x > o2.x) {\n    return 1;\n  }\n  // o1.x equals o2.x\n  if (o1.y < o2.y) {\n    return -1;\n  }\n  return 0;\n};\n\nconst sortBlockOffsets = (blockOffsets:BlockOffset[]):BlockOffset[] => {\n  return copyBlockOffsets(blockOffsets).sort(compareXThenY);\n};\n\nconst findShape = (blockOffsets: BlockOffset[]):string => {\n  const sortedBlockOffsets:BlockOffset[] = sortBlockOffsets(blockOffsets);\n\n  for(let shape of Array.from( SHAPES.keys()) ) {\n    const blockData:BlockData[] = SHAPES.get(shape) || [];\n    const blockOffsets:BlockOffset[] = blockData.map(b => b.offset);\n\n    if (isEqual(sortedBlockOffsets, blockOffsets)) {\n      return shape;\n    }\n  }\n  return 'UNKNOWN';\n};\n\nconst createPiece = (gridX:number, gridY:number, blockOffsets:BlockOffset[]):PieceData => {\n  const minX = Math.min(...blockOffsets.map(o => o.x));\n  const minY = Math.min(...blockOffsets.map(o => o.y));\n  const newPiece:PieceData = {\n    gridX: gridX + minX,\n    gridY: gridY + minY,\n    shape: findShape(blockOffsets.map(o => { return { x: o.x - minX, y: o.y - minY } }))\n  };\n  return newPiece;\n};\n\nconst calcSmallerPieces = (placedPiece: PieceData, completedGridPositions: GridPos[]):PieceData[] => {\n  const smallerPieces:PieceData[] = [];\n  const blockData:BlockData[] = SHAPES.get(placedPiece.shape) || [];\n  const pieceBlockOffsets:BlockOffset[] = blockData.map(b => b.offset);\n\n  const completedBlockOffsets:BlockOffset[] = toBlockOffsets(placedPiece.gridX, placedPiece.gridY, completedGridPositions);\n  const remainingBlockOffsets:BlockOffset[] = removeCompletedBlockOffsets(pieceBlockOffsets, completedBlockOffsets);\n  const groupedBlockOffsets:BlockOffset[][] = groupBlockOffsetsByNeighbours(remainingBlockOffsets);\n  groupedBlockOffsets.forEach(blockOffsets => {\n    const newPiece:PieceData = createPiece(placedPiece.gridX, placedPiece.gridY, blockOffsets);\n    smallerPieces.push(newPiece);\n  });\n\n  return smallerPieces;\n};\n\nexport const removeCompleted = (placedPieces: PieceData[], completed:GridPos[]):PieceData[] => {\n  const newPlacedPieces:PieceData[] = [];\n\n  placedPieces.forEach(placedPiece => {\n    const gridPositions:GridPos[] = shapeToGridPositions(placedPiece.gridX, placedPiece.gridY, placedPiece.shape);\n    const completedGridPositions = gridPositions.filter(gridPos => completed.some(c => c.x === gridPos.x && c.y === gridPos.y));\n\n    if (completedGridPositions.length === 0) {\n      // keep piece as is\n      newPlacedPieces.push(placedPiece);\n    } else if (completedGridPositions.length !== gridPositions.length) {\n      // keep piece as one or more smaller pieces\n      const smallerPieces:PieceData[] = calcSmallerPieces(placedPiece, completedGridPositions);\n      newPlacedPieces.push(...smallerPieces);\n    }\n  });\n  return newPlacedPieces;\n};\n","import React, { FunctionComponent, ReactNode } from 'react';\nimport styles from './Grid.module.scss';\nimport { useGameDimensions } from '../gameDimensionsProvider/GameDimensionsProvider';\nimport Piece, { PieceData } from '../piece/Piece';\n\nconst Grid: FunctionComponent<any> = ({ placedPieces, hoverPiece, completedBlocks }) => {\n  const cellTypes = [\n    'OOOXXXOOO',\n    'OOOXXXOOO',\n    'OOOXXXOOO',\n    'XXXOOOXXX',\n    'XXXOOOXXX',\n    'XXXOOOXXX',\n    'OOOXXXOOO',\n    'OOOXXXOOO',\n    'OOOXXXOOO'\n  ];\n  const gameDimensions = useGameDimensions();\n  const cellSize = gameDimensions.cellSize;\n  const gridInlineStyles = {\n    left: `${gameDimensions.gridLeft}px`,\n    top: `${gameDimensions.gridTop}px`\n  };\n  const cellInlineStyles = {\n    width: `${cellSize}px`,\n    height: `${cellSize}px`\n  };\n\n  const rows = cellTypes.map( (cellType, rowIndex) => {\n    const cells: Array<ReactNode> = [];\n    cellType.split('').forEach( (ch, colIndex) =>  {\n      cells.push(<div key={colIndex}\n                      style={cellInlineStyles}\n                      className={ch === 'O' ? styles.cell : styles.shadedCell}>\n                 </div>)\n    });\n    return <div key={rowIndex} className={styles.row}>{cells}</div>;\n  } );\n\n  return (\n    <div style={gridInlineStyles}\n         className={styles.grid}>\n      {rows}\n      {placedPieces.map( (p:PieceData, i:number) => <Piece key={i} x={p.gridX} y={p.gridY} shape={p.shape}/>)}\n      {hoverPiece && <Piece key={999} x={hoverPiece.gridX} y={hoverPiece.gridY} shape={hoverPiece.shape} isMuted={true}/>}\n      {completedBlocks.map( (p:PieceData, i:number) => <Piece key={100+i} x={p.gridX} y={p.gridY} shape={p.shape} isCompleted={true}/>)}\n    </div>\n  );\n};\n\nexport default Grid;\n","import React, { FunctionComponent, useState } from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './DraggablePiece.module.scss';\nimport { useGameDimensions } from '../gameDimensionsProvider/GameDimensionsProvider';\nimport Draggable, { DraggableData, DraggableEvent, DraggableEventHandler } from \"react-draggable\";\nimport Piece, { shapeDimensions } from '../piece/Piece';\n\nlet cx = classNames.bind(styles);\n\nconst DraggablePiece: FunctionComponent<any> = ({ shape, onDrag, onDragStop }) => {\n  const gameDimensions = useGameDimensions();\n  const shapeDims = shapeDimensions(shape, gameDimensions.cellSize);\n  const smallShapeDims = shapeDimensions(shape, gameDimensions.cellSize / 2);\n  const initialPosition = {\n    x: (shapeDims.width - smallShapeDims.width) / 2,\n    y: (shapeDims.height - smallShapeDims.height) / 2\n  };\n  const [isPreDragging, setIsPreDragging] = useState(true);\n  const [isDragging, setIsDragging] = useState(false);\n  const [position, setPosition] = useState(initialPosition);\n  const dragStartYOffset = -(gameDimensions.cellSize * 2);\n\n  let containerInlineStyles = {\n    left: `${gameDimensions.draggableLeft - (shapeDims.width / 2)}px`,\n    top: `${gameDimensions.draggableTop - (shapeDims.height / 2)}px`\n  };\n\n  let pieceContainerClassName = cx({\n    isPreDragging: isPreDragging,\n  });\n\n  const toGridDragData = (data: DraggableData) => {\n    const pieceRect = data.node.getBoundingClientRect();\n\n    const halfCellSize = gameDimensions.cellSize / 2;\n    const gridX = Math.floor( (pieceRect.left + halfCellSize - gameDimensions.gridLeft) / gameDimensions.cellSize );\n    const gridY = Math.floor( (pieceRect.top + halfCellSize - gameDimensions.gridTop) / gameDimensions.cellSize );\n    const isInsideGrid = gridX >= 0 && gridX <=8 && gridY >=0 && gridY <= 8;\n\n    return { isInsideGrid, gridX, gridY, shape };\n  };\n\n  const handleStart = () => {\n    setIsPreDragging(true);\n    setPosition({x:0,y:dragStartYOffset});\n    setIsDragging(true);\n  };\n  const handleDrag: DraggableEventHandler = (e: DraggableEvent, data: DraggableData) => {\n    setIsPreDragging(false);\n    onDrag(toGridDragData(data));\n  };\n  const handleStop: DraggableEventHandler = (e: DraggableEvent, data: DraggableData) => {\n    const gridDragData = toGridDragData(data);\n\n    setPosition(initialPosition);\n    setIsDragging(false);\n\n    onDragStop(gridDragData);\n  };\n\n  return (\n    <div style={containerInlineStyles} className={styles.container}>\n      <Draggable position={position}\n                 onStart={handleStart}\n                 onDrag={handleDrag}\n                 onStop={handleStop}>\n        <div className={pieceContainerClassName}>\n          <Piece x={0} y={0} shape={shape} isDraggable={true} isPreDragging={isPreDragging} isDragging={isDragging}/>\n        </div>\n      </Draggable>\n    </div>\n  );\n};\n\nexport default DraggablePiece;\n","import React, { useState } from 'react';\nimport GameDimensionsProvider from './components/gameDimensionsProvider/GameDimensionsProvider';\nimport GameHeader from './components/gameHeader/GameHeader';\nimport Grid from './components/grid/Grid';\nimport DraggablePiece from './components/draggablePiece/DraggablePiece';\nimport {\n  calculatePlaceable,\n  getCompletedGridPositions,\n  pickRandomShape,\n  PieceData,\n  removeCompleted,\n} from './components/piece/Piece';\n\nconst initialShape = pickRandomShape();\nconst initialPlacedPieces:PieceData[] = [];\n\n// FOR TESTING (replace above code with this)\n// const initialShape = '3B_I_1';\n// const initialPlacedPieces:PieceData[] = [\n//   { gridX: 2, gridY: 1, shape: '2B_I_2' },\n//   { gridX: 2, gridY: 3, shape: '3B_I_2' },\n//   { gridX: 2, gridY: 6, shape: '3B_I_2' }\n// ];\n\nlet placeable:boolean[][] = calculatePlaceable(initialShape, []);\n\nfunction App() {\n  const [placedPieces, setPlacedPieces] = useState<PieceData[]>(initialPlacedPieces);\n  const [hoverPiece, setHoverPiece] = useState<PieceData | null>();\n  const [completedBlocks, setCompletedBlocks] = useState<PieceData[]>([]);\n  const [nextShape, setNextShape] = useState<string>(initialShape);\n\n  const isPlaceable = (isInsideGrid:boolean, gridX:number, gridY:number): boolean => {\n    return isInsideGrid && placeable[gridX][gridY];\n  };\n\n  const updateNextShape = (placedPieces:PieceData[]) => {\n    const shape = pickRandomShape();\n    setNextShape(shape);\n    placeable = calculatePlaceable(shape, placedPieces);\n  };\n\n  const onPieceDrag = ({ isInsideGrid, gridX, gridY, shape }:any) => {\n    if (isPlaceable(isInsideGrid, gridX, gridY)) {\n      setHoverPiece({ gridX, gridY, shape });\n    } else {\n      setHoverPiece(null);\n    }\n  };\n  const onPieceDragStop = ({ isInsideGrid, gridX, gridY, shape }:any) => {\n    if (isPlaceable(isInsideGrid, gridX, gridY)) {\n      const placedPiece = { gridX, gridY, shape };\n      let newPlacedPieces = [...placedPieces, placedPiece];\n\n      const completedGridPositions = getCompletedGridPositions(placedPiece, newPlacedPieces);\n      if (completedGridPositions.length > 0) {\n        // TODO have removeCompleted also return completedPieces instead of using a '1B' for each completedGridPositions\n        newPlacedPieces = removeCompleted(newPlacedPieces, completedGridPositions);\n        setCompletedBlocks(completedGridPositions.map(p => { return { gridX:p.x, gridY:p.y, shape:'1B' }}));\n        window.setTimeout(() => { setCompletedBlocks([])}, 500);\n      }\n\n      setPlacedPieces(newPlacedPieces);\n      updateNextShape(newPlacedPieces);\n    }\n    setHoverPiece(null);\n  };\n\n  return (\n    <GameDimensionsProvider>\n      <div>\n        <GameHeader/>\n        <Grid placedPieces={placedPieces} hoverPiece={hoverPiece} completedBlocks={completedBlocks}/>\n        <DraggablePiece shape={nextShape} onDrag={onPieceDrag} onDragStop={onPieceDragStop}/>\n      </div>\n    </GameDimensionsProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}